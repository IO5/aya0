State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                   TERMINATION shift  120
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         chunk accept
                         block shift  116
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  89
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  47
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  134
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  51
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= FOR IDENT IN exp DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  95
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  98
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  99
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  113
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                         block shift  90
                     stat_list shift  88
                          stat shift  159
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                          stat shift  121
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                            DO shift  8
                        GLOBAL shift  103
                         IDENT shift  141
                         LOCAL shift  84
                         WHILE shift  20
                        REPEAT shift  6
                           FOR shift  97
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  133
                         BREAK shift  132
                         CLASS shift  93
                            PL shift  40
                           DEF shift  45
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                          stat shift  163
                           exp shift  71
                           var shift  112
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= SBL * SBR
          exp ::= * SBL exp_list SBR
          exp ::= SBL * exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           SBR shift  145
                           CBL shift  111
                          PIPE shift  38
                           exp shift  69
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                      exp_list shift  85

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                            PR shift  157
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  69
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83
                      exp_list shift  86

State 14:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  56
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 15:
          stat ::= CLASS IDENT PL * exp PR class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  57
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 16:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  64
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 17:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  58
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 18:
          stat ::= FOR IDENT IN * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  59
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 19:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  65
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 20:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  60
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 21:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  66
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 22:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  67
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 23:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          var ::= prefixexp SBL * exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  61
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 24:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  105
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  106
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  107
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  108
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  109
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  110
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  81
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  82
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  80
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  75
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  76
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  77
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  78
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  79
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  62
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  74
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  63
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  68
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 42:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  73
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 43:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  70
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 44:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  24
                           NOT shift  25
                         IDENT shift  141
                            PL shift  40
                           DEF shift  55
                        STRING shift  154
                           NIL shift  150
                         FALSE shift  149
                          TRUE shift  148
                           INT shift  147
                          REAL shift  146
                           SBL shift  12
                           CBL shift  111
                          PIPE shift  38
                           exp shift  72
                           var shift  155
                      function shift  151
                  functioncall shift  153
                     prefixexp shift  83

State 45:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  125
                            PL shift  52
                     func_body shift  162
                    func_ident shift  48

State 46:
          stat ::= CLASS IDENT * class_body
          stat ::= CLASS IDENT * PL exp PR class_body
          class_body ::= * END
          class_body ::= * DEF IDENT func_body class_body

                           END shift  129
                            PL shift  15
                           DEF shift  92
                    class_body shift  131

State 47:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  124
                     {default} reduce 18

State 48:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  91
                            PL shift  52
                     func_body shift  127

State 49:
          class_body ::= * END
          class_body ::= * DEF IDENT func_body class_body
          class_body ::= DEF IDENT func_body * class_body

                           END shift  129
                           DEF shift  92
                    class_body shift  128

State 50:
          stat ::= CLASS IDENT PL exp PR * class_body
          class_body ::= * END
          class_body ::= * DEF IDENT func_body class_body

                           END shift  129
                           DEF shift  92
                    class_body shift  130

State 51:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  94
                     {default} reduce 18

State 52:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  161
                            PR shift  1
                    ident_list shift  87

State 53:
          class_body ::= DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  52
                     func_body shift  49

State 54:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  52
                     func_body shift  138

State 55:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  52
                     func_body shift  162

State 56:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                          THEN shift  2

State 57:
          stat ::= CLASS IDENT PL exp * PR class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                            PR shift  50

State 58:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                          THEN shift  4

State 59:
          stat ::= FOR IDENT IN exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                            DO shift  5

State 60:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                            DO shift  7

State 61:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
          var ::= prefixexp SBL exp * SBR

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                           SBR shift  139

State 62:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                          PIPE shift  142

State 63:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                            PR shift  152

State 64:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 21

State 65:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 15

State 66:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 13

State 67:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 10

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (75) exp_list ::= exp_list COMMA exp *

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 75

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (74) exp_list ::= exp *

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 74

State 70:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 9

State 71:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  44
                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 7

State 72:
          exp ::= exp * OR exp
     (54) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  42
                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 54

State 73:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (55) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  33
                           NEQ shift  34
                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 55

State 74:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (56) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 56

State 75:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (61) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 61

State 76:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (60) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  39
                             G shift  37
                           LEQ shift  36
                           GEQ shift  35
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 60

State 77:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (59) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 59

State 78:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (58) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 58

State 79:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (57) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  32
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 57

State 80:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (62) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  31
                         MINUS shift  30
                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 62

State 81:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (64) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 64

State 82:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (63) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  29
                           DIV shift  28
                           MOD shift  27
                           EXP shift  26
                     {default} reduce 63

State 83:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (43) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT
          var ::= prefixexp * SBL exp SBR

                           DOT shift  104
                            PL shift  13
                           SBL shift  23
                     {default} reduce 43

State 84:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  101
                           DEF shift  100

State 85:
          exp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  41
                           SBR shift  144

State 86:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                            PR shift  156
                         COMMA shift  41

State 87:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                            PR shift  9
                         COMMA shift  114

State 88:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 89:
          func_body ::= PL PR block * END

                           END shift  122

State 90:
          func_body ::= PL ident_list PR block * END

                           END shift  123

State 91:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  126

State 92:
          class_body ::= DEF * IDENT func_body class_body

                         IDENT shift  53

State 93:
          stat ::= CLASS * IDENT class_body
          stat ::= CLASS * IDENT PL exp PR class_body

                         IDENT shift  46

State 94:
          stat ::= IF exp THEN block else * END

                           END shift  135

State 95:
          stat ::= FOR IDENT IN exp DO block * END

                           END shift  136

State 96:
          stat ::= FOR IDENT * IN exp DO block END

                            IN shift  18

State 97:
          stat ::= FOR * IDENT IN exp DO block END

                         IDENT shift  96

State 98:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  19

State 99:
          stat ::= WHILE exp DO block * END

                           END shift  137

State 100:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  54

State 101:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  21
                     {default} reduce 12

State 102:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  22
                     {default} reduce 11

State 103:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  102

State 104:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  140

State 105:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (70) exp ::= MINUS exp *

                           EXP shift  26
                     {default} reduce 70

State 106:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (69) exp ::= NOT exp *

                           EXP shift  26
                     {default} reduce 69

State 107:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (68) exp ::= exp EXP exp *

                           EXP shift  26
                     {default} reduce 68

State 108:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (67) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  26
                     {default} reduce 67

State 109:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (66) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  26
                     {default} reduce 66

State 110:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (65) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  26
                     {default} reduce 65

State 111:
          exp ::= CBL * CBR

                           CBR shift  143

State 112:
          stat ::= var * ASSIG exp
     (39) prefixexp ::= var *

                         ASSIG shift  43
                     {default} reduce 39

State 113:
          stat ::= DO block * END

                           END shift  158

State 114:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  160

State 115:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 116:
          chunk ::= block * EOS

                           EOS shift  115

State 117:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 118:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  117

State 119:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  118

State 120:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  119

State 121:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 122:
     (35) func_body ::= PL PR block END *

                     {default} reduce 35

State 123:
     (36) func_body ::= PL ident_list PR block END *

                     {default} reduce 36

State 124:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 125:
     (32) func_ident ::= IDENT *

                     {default} reduce 32

State 126:
     (33) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 33

State 127:
     (30) stat ::= DEF func_ident func_body *

                     {default} reduce 30

State 128:
     (27) class_body ::= DEF IDENT func_body class_body *

                     {default} reduce 27

State 129:
     (26) class_body ::= END *

                     {default} reduce 26

State 130:
     (25) stat ::= CLASS IDENT PL exp PR class_body *

                     {default} reduce 25

State 131:
     (24) stat ::= CLASS IDENT class_body *

                     {default} reduce 24

State 132:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 133:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 134:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 135:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 136:
     (16) stat ::= FOR IDENT IN exp DO block END *

                     {default} reduce 16

State 137:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 138:
     (31) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 31

State 139:
     (73) var ::= prefixexp SBL exp SBR *

                     {default} reduce 73

State 140:
     (72) var ::= prefixexp DOT IDENT *

                     {default} reduce 72

State 141:
     (71) var ::= IDENT *

                     {default} reduce 71

State 142:
     (53) exp ::= PIPE exp PIPE *

                     {default} reduce 53

State 143:
     (52) exp ::= CBL CBR *

                     {default} reduce 52

State 144:
     (51) exp ::= SBL exp_list SBR *

                     {default} reduce 51

State 145:
     (50) exp ::= SBL SBR *

                     {default} reduce 50

State 146:
     (49) exp ::= REAL *

                     {default} reduce 49

State 147:
     (48) exp ::= INT *

                     {default} reduce 48

State 148:
     (47) exp ::= TRUE *

                     {default} reduce 47

State 149:
     (46) exp ::= FALSE *

                     {default} reduce 46

State 150:
     (45) exp ::= NIL *

                     {default} reduce 45

State 151:
     (44) exp ::= function *

                     {default} reduce 44

State 152:
     (42) prefixexp ::= PL exp PR *

                     {default} reduce 42

State 153:
     (41) prefixexp ::= functioncall *

                     {default} reduce 41

State 154:
     (40) prefixexp ::= STRING *

                     {default} reduce 40

State 155:
     (39) prefixexp ::= var *

                     {default} reduce 39

State 156:
     (38) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 38

State 157:
     (37) functioncall ::= prefixexp PL PR *

                     {default} reduce 37

State 158:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 159:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 160:
     (29) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 29

State 161:
     (28) ident_list ::= IDENT *

                     {default} reduce 28

State 162:
     (34) function ::= DEF func_body *

                     {default} reduce 34

State 163:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: ASSIG
   27: GLOBAL
   28: IDENT
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: CLASS
   43: PL
   44: PR
   45: DEF
   46: COMMA
   47: STRING
   48: NIL
   49: FALSE
   50: TRUE
   51: INT
   52: REAL
   53: SBL
   54: SBR
   55: CBL
   56: CBR
   57: PIPE
   58: error:
   59: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   60: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   61: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   62: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   63: exp: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   64: var: IDENT PL STRING
   65: else: <lambda> ELSE ELSEIF
   66: class_body: END DEF
   67: func_body: PL
   68: ident_list: IDENT
   69: func_ident: IDENT
   70: function: DEF
   71: functioncall: IDENT PL STRING
   72: prefixexp: IDENT PL STRING
   73: exp_list: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
