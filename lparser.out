State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                   TERMINATION shift  137
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         chunk accept
                         block shift  133
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  104
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  56
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  157
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  61
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= FOR IDENT IN exp DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  113
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  116
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  117
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  130
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                         block shift  105
                     stat_list shift  103
                          stat shift  183
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                          stat shift  138
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  121
                         IDENT shift  164
                         LOCAL shift  98
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  115
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  111
                            PL shift  45
                           DEF shift  50
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                          stat shift  187
                           exp shift  86
                           var shift  129
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= CBL * CBR
          prefixexp ::= * CBL dict_list CBR
          prefixexp ::= CBL * dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= * exp COLON exp
          dict_list ::= * dict_list COMMA exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           CBR shift  173
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  73
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                     dict_list shift  99

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= SBL * SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= SBL * exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           SBR shift  175
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  82
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                      exp_list shift  100

State 14:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                            PR shift  181
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  82
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97
                      exp_list shift  101

State 15:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  67
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 16:
          class_body ::= NL IDENT ASSIG * exp class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  51
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 17:
          class_body ::= SCOLON IDENT ASSIG * exp class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  52
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 18:
          stat ::= CLASS IDENT PL * exp PR class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  68
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 19:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  77
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 20:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  69
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 21:
          stat ::= FOR IDENT IN * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  70
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 22:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  78
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 23:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  71
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 24:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  79
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 25:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  80
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          var ::= prefixexp SBL * exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  72
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  83
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  123
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  124
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  125
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  126
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  127
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  128
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  95
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  96
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  91
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  92
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  93
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  94
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  74
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  90
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 42:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= dict_list COMMA exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  84
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 43:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= dict_list COMMA * exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  75
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 44:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  89
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 45:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  76
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 46:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  81
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 47:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  88
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 48:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  85
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 49:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  45
                           DEF shift  66
                        STRING shift  176
                           SBL shift  13
                           CBL shift  12
                           NIL shift  170
                         FALSE shift  169
                          TRUE shift  168
                           INT shift  167
                          REAL shift  166
                          PIPE shift  40
                           exp shift  87
                           var shift  179
                      function shift  171
                  functioncall shift  178
                     prefixexp shift  97

State 50:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  142
                            PL shift  62
                     func_body shift  186
                    func_ident shift  57

State 51:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= NL IDENT ASSIG exp * class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            NL shift  54
                        SCOLON shift  53
                    class_body shift  145

State 52:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          class_body ::= SCOLON IDENT ASSIG exp * class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            NL shift  54
                        SCOLON shift  53
                    class_body shift  148

State 53:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= SCOLON * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= SCOLON * class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= SCOLON * DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          class_body ::= SCOLON * IDENT ASSIG exp class_body

                            NL shift  54
                        SCOLON shift  53
                           END shift  151
                         IDENT shift  109
                           DEF shift  110
                    class_body shift  150

State 54:
          class_body ::= * NL END
          class_body ::= NL * END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= NL * class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= NL * DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= NL * IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  54
                        SCOLON shift  53
                           END shift  152
                         IDENT shift  107
                           DEF shift  108
                    class_body shift  147

State 55:
          stat ::= CLASS IDENT * class_body
          stat ::= CLASS IDENT * PL exp PR class_body
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  54
                        SCOLON shift  53
                            PL shift  18
                    class_body shift  154

State 56:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  141
                     {default} reduce 18

State 57:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  106
                            PL shift  62
                     func_body shift  144

State 58:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= NL DEF IDENT func_body * class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  54
                        SCOLON shift  53
                    class_body shift  146

State 59:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= SCOLON DEF IDENT func_body * class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  54
                        SCOLON shift  53
                    class_body shift  149

State 60:
          stat ::= CLASS IDENT PL exp PR * class_body
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  54
                        SCOLON shift  53
                    class_body shift  153

State 61:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  112
                     {default} reduce 18

State 62:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  185
                            PR shift  1
                    ident_list shift  102

State 63:
          class_body ::= NL DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  62
                     func_body shift  58

State 64:
          class_body ::= SCOLON DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  62
                     func_body shift  59

State 65:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  62
                     func_body shift  161

State 66:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  62
                     func_body shift  186

State 67:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                          THEN shift  2

State 68:
          stat ::= CLASS IDENT PL exp * PR class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            PR shift  60

State 69:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                          THEN shift  4

State 70:
          stat ::= FOR IDENT IN exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            DO shift  5

State 71:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            DO shift  7

State 72:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
          var ::= prefixexp SBL exp * SBR

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                           SBR shift  162

State 73:
          dict_list ::= exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                         COLON shift  27

State 74:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                          PIPE shift  165

State 75:
          dict_list ::= dict_list COMMA exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                         COLON shift  42

State 76:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            PR shift  177

State 77:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 21

State 78:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 15

State 79:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 13

State 80:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 10

State 81:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (83) exp_list ::= exp_list COMMA exp *

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 83

State 82:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (82) exp_list ::= exp *

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 82

State 83:
     (60) dict_list ::= exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 60

State 84:
     (61) dict_list ::= dict_list COMMA exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 61

State 85:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 9

State 86:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  49
                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 7

State 87:
          exp ::= exp * OR exp
     (63) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  47
                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 63

State 88:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (64) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  36
                           NEQ shift  37
                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 64

State 89:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (65) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 65

State 90:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (66) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 66

State 91:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (70) exp ::= exp EQ exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 70

State 92:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (69) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  44
                             G shift  41
                           LEQ shift  39
                           GEQ shift  38
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 69

State 93:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (68) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 68

State 94:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (67) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 67

State 95:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (72) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 72

State 96:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
     (71) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 71

State 97:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (53) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT
          var ::= prefixexp * SBL exp SBR

                           DOT shift  122
                            PL shift  14
                           SBL shift  26
                     {default} reduce 53

State 98:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  119
                           DEF shift  118

State 99:
          prefixexp ::= CBL dict_list * CBR
          dict_list ::= dict_list * COMMA exp COLON exp

                         COMMA shift  43
                           CBR shift  172

State 100:
          prefixexp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  46
                           SBR shift  174

State 101:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                            PR shift  180
                         COMMA shift  46

State 102:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                            PR shift  9
                         COMMA shift  131

State 103:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 104:
          func_body ::= PL PR block * END

                           END shift  139

State 105:
          func_body ::= PL ident_list PR block * END

                           END shift  140

State 106:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  143

State 107:
          class_body ::= NL IDENT * ASSIG exp class_body

                         ASSIG shift  16

State 108:
          class_body ::= NL DEF * IDENT func_body class_body

                         IDENT shift  63

State 109:
          class_body ::= SCOLON IDENT * ASSIG exp class_body

                         ASSIG shift  17

State 110:
          class_body ::= SCOLON DEF * IDENT func_body class_body

                         IDENT shift  64

State 111:
          stat ::= CLASS * IDENT class_body
          stat ::= CLASS * IDENT PL exp PR class_body

                         IDENT shift  55

State 112:
          stat ::= IF exp THEN block else * END

                           END shift  158

State 113:
          stat ::= FOR IDENT IN exp DO block * END

                           END shift  159

State 114:
          stat ::= FOR IDENT * IN exp DO block END

                            IN shift  21

State 115:
          stat ::= FOR * IDENT IN exp DO block END

                         IDENT shift  114

State 116:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  22

State 117:
          stat ::= WHILE exp DO block * END

                           END shift  160

State 118:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  65

State 119:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  24
                     {default} reduce 12

State 120:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  25
                     {default} reduce 11

State 121:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  120

State 122:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  163

State 123:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (78) exp ::= MINUS exp *

                           EXP shift  30
                     {default} reduce 78

State 124:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (77) exp ::= NOT exp *

                           EXP shift  30
                     {default} reduce 77

State 125:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (76) exp ::= exp EXP exp *

                           EXP shift  30
                     {default} reduce 76

State 126:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (75) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  30
                     {default} reduce 75

State 127:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (74) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  30
                     {default} reduce 74

State 128:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (73) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  30
                     {default} reduce 73

State 129:
          stat ::= var * ASSIG exp
     (45) prefixexp ::= var *

                         ASSIG shift  48
                     {default} reduce 45

State 130:
          stat ::= DO block * END

                           END shift  182

State 131:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  184

State 132:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 133:
          chunk ::= block * EOS

                           EOS shift  132

State 134:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 135:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  134

State 136:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  135

State 137:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  136

State 138:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 139:
     (41) func_body ::= PL PR block END *

                     {default} reduce 41

State 140:
     (42) func_body ::= PL ident_list PR block END *

                     {default} reduce 42

State 141:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 142:
     (38) func_ident ::= IDENT *

                     {default} reduce 38

State 143:
     (39) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 39

State 144:
     (36) stat ::= DEF func_ident func_body *

                     {default} reduce 36

State 145:
     (32) class_body ::= NL IDENT ASSIG exp class_body *

                     {default} reduce 32

State 146:
     (30) class_body ::= NL DEF IDENT func_body class_body *

                     {default} reduce 30

State 147:
     (28) class_body ::= NL class_body *

                     {default} reduce 28

State 148:
     (33) class_body ::= SCOLON IDENT ASSIG exp class_body *

                     {default} reduce 33

State 149:
     (31) class_body ::= SCOLON DEF IDENT func_body class_body *

                     {default} reduce 31

State 150:
     (29) class_body ::= SCOLON class_body *

                     {default} reduce 29

State 151:
     (27) class_body ::= SCOLON END *

                     {default} reduce 27

State 152:
     (26) class_body ::= NL END *

                     {default} reduce 26

State 153:
     (25) stat ::= CLASS IDENT PL exp PR class_body *

                     {default} reduce 25

State 154:
     (24) stat ::= CLASS IDENT class_body *

                     {default} reduce 24

State 155:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 156:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 157:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 158:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 159:
     (16) stat ::= FOR IDENT IN exp DO block END *

                     {default} reduce 16

State 160:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 161:
     (37) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 37

State 162:
     (81) var ::= prefixexp SBL exp SBR *

                     {default} reduce 81

State 163:
     (80) var ::= prefixexp DOT IDENT *

                     {default} reduce 80

State 164:
     (79) var ::= IDENT *

                     {default} reduce 79

State 165:
     (62) exp ::= PIPE exp PIPE *

                     {default} reduce 62

State 166:
     (59) exp ::= REAL *

                     {default} reduce 59

State 167:
     (58) exp ::= INT *

                     {default} reduce 58

State 168:
     (57) exp ::= TRUE *

                     {default} reduce 57

State 169:
     (56) exp ::= FALSE *

                     {default} reduce 56

State 170:
     (55) exp ::= NIL *

                     {default} reduce 55

State 171:
     (54) exp ::= function *

                     {default} reduce 54

State 172:
     (52) prefixexp ::= CBL dict_list CBR *

                     {default} reduce 52

State 173:
     (51) prefixexp ::= CBL CBR *

                     {default} reduce 51

State 174:
     (50) prefixexp ::= SBL exp_list SBR *

                     {default} reduce 50

State 175:
     (49) prefixexp ::= SBL SBR *

                     {default} reduce 49

State 176:
     (48) prefixexp ::= STRING *

                     {default} reduce 48

State 177:
     (47) prefixexp ::= PL exp PR *

                     {default} reduce 47

State 178:
     (46) prefixexp ::= functioncall *

                     {default} reduce 46

State 179:
     (45) prefixexp ::= var *

                     {default} reduce 45

State 180:
     (44) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 44

State 181:
     (43) functioncall ::= prefixexp PL PR *

                     {default} reduce 43

State 182:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 183:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 184:
     (35) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 35

State 185:
     (34) ident_list ::= IDENT *

                     {default} reduce 34

State 186:
     (40) function ::= DEF func_body *

                     {default} reduce 40

State 187:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: PLUS
   10: MINUS
   11: MUL
   12: DIV
   13: MOD
   14: NOT
   15: EXP
   16: TERMINATION
   17: UNINITIALIZED
   18: WARNING
   19: DOT
   20: EOS
   21: NL
   22: SCOLON
   23: DO
   24: END
   25: ASSIG
   26: GLOBAL
   27: IDENT
   28: LOCAL
   29: WHILE
   30: REPEAT
   31: UNTIL
   32: FOR
   33: IN
   34: IF
   35: THEN
   36: ELSE
   37: ELSEIF
   38: RETURN
   39: NEXT
   40: BREAK
   41: CLASS
   42: PL
   43: PR
   44: DEF
   45: COMMA
   46: STRING
   47: SBL
   48: SBR
   49: CBL
   50: CBR
   51: NIL
   52: FALSE
   53: TRUE
   54: INT
   55: REAL
   56: COLON
   57: PIPE
   58: error:
   59: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   60: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   61: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   62: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   63: exp: MINUS NOT IDENT PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   64: var: IDENT PL STRING SBL CBL
   65: else: <lambda> ELSE ELSEIF
   66: class_body: NL SCOLON
   67: func_body: PL
   68: ident_list: IDENT
   69: func_ident: IDENT
   70: function: DEF
   71: functioncall: IDENT PL STRING SBL CBL
   72: prefixexp: IDENT PL STRING SBL CBL
   73: exp_list: MINUS NOT IDENT PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   74: dict_list: MINUS NOT IDENT PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
