State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                   TERMINATION shift  105
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         chunk accept
                         block shift  101
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  80
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  42
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  113
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  44
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= FOR ident_list IN exp_list DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  83
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  84
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  85
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  98
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                         block shift  81
                     stat_list shift  79
                          stat shift  133
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                          stat shift  106
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * IDENT ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF IDENT func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                         IDENT shift  97
                        GLOBAL shift  89
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  112
                         BREAK shift  111
                           DEF shift  43
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                          stat shift  137
                           exp shift  62
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                            PR shift  131
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  59
                      exp_list shift  77
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 13:
          stat ::= FOR ident_list IN * exp_list DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  59
                      exp_list shift  74
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 14:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  50
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 15:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  55
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 16:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  51
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 17:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  56
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 18:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  52
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 19:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  57
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 20:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  58
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 21:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  90
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 22:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  91
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 23:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  92
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 24:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  93
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  94
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  95
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  72
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  73
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  71
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  66
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  67
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  68
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  69
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  70
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  53
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  65
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  54
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  60
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  64
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 40:
          stat ::= IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  61
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * STRING
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  118
                           DEF shift  49
                            PL shift  37
                           NIL shift  125
                         FALSE shift  124
                          TRUE shift  123
                           INT shift  122
                          REAL shift  121
                        STRING shift  120
                          PIPE shift  35
                           exp shift  63
                      function shift  126
                  functioncall shift  128
                     prefixexp shift  96
                           var shift  129

State 42:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  109
                     {default} reduce 18

State 43:
          stat ::= DEF * IDENT func_body
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  46
                            PL shift  45
                     func_body shift  136

State 44:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  82
                     {default} reduce 18

State 45:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  135
                            PR shift  1
                    ident_list shift  78

State 46:
          stat ::= DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  45
                     func_body shift  110

State 47:
          stat ::= FOR * ident_list IN exp_list DO block END
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT

                         IDENT shift  135
                    ident_list shift  75

State 48:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  45
                     func_body shift  117

State 49:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  45
                     func_body shift  136

State 50:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                          THEN shift  2

State 51:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                          THEN shift  4

State 52:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                            DO shift  7

State 53:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                          PIPE shift  119

State 54:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                            PR shift  127

State 55:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 21

State 56:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 15

State 57:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 13

State 58:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 10

State 59:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (63) exp_list ::= exp *

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 63

State 60:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (64) exp_list ::= exp_list COMMA exp *

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 64

State 61:
      (9) stat ::= IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 9

State 62:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 7

State 63:
          exp ::= exp * OR exp
     (45) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 45

State 64:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (46) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 46

State 65:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (47) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 47

State 66:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (52) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 52

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (51) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 51

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (50) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 50

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (49) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 49

State 70:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (48) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 48

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (53) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 53

State 72:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (55) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 55

State 73:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (54) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 54

State 74:
          stat ::= FOR ident_list IN exp_list * DO block END
          exp_list ::= exp_list * COMMA exp

                            DO shift  5
                         COMMA shift  38

State 75:
          stat ::= FOR ident_list * IN exp_list DO block END
          ident_list ::= ident_list * COMMA IDENT

                            IN shift  13
                         COMMA shift  99

State 76:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  87
                           DEF shift  86

State 77:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  38
                            PR shift  130

State 78:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                         COMMA shift  99
                            PR shift  9

State 79:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 80:
          func_body ::= PL PR block * END

                           END shift  107

State 81:
          func_body ::= PL ident_list PR block * END

                           END shift  108

State 82:
          stat ::= IF exp THEN block else * END

                           END shift  114

State 83:
          stat ::= FOR ident_list IN exp_list DO block * END

                           END shift  115

State 84:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  17

State 85:
          stat ::= WHILE exp DO block * END

                           END shift  116

State 86:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  48

State 87:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  19
                     {default} reduce 12

State 88:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  20
                     {default} reduce 11

State 89:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  88

State 90:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (61) exp ::= MINUS exp *

                           EXP shift  23
                     {default} reduce 61

State 91:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (60) exp ::= NOT exp *

                           EXP shift  23
                     {default} reduce 60

State 92:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (59) exp ::= exp EXP exp *

                           EXP shift  23
                     {default} reduce 59

State 93:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (58) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  23
                     {default} reduce 58

State 94:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (57) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  23
                     {default} reduce 57

State 95:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (56) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  23
                     {default} reduce 56

State 96:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (36) exp ::= prefixexp *

                            PL shift  12
                     {default} reduce 36

State 97:
          stat ::= IDENT * ASSIG exp
     (62) var ::= IDENT *

                         ASSIG shift  40
                     {default} reduce 62

State 98:
          stat ::= DO block * END

                           END shift  132

State 99:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  134

State 100:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 101:
          chunk ::= block * EOS

                           EOS shift  100

State 102:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 103:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  102

State 104:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  103

State 105:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  104

State 106:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 107:
     (29) func_body ::= PL PR block END *

                     {default} reduce 29

State 108:
     (30) func_body ::= PL ident_list PR block END *

                     {default} reduce 30

State 109:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 110:
     (26) stat ::= DEF IDENT func_body *

                     {default} reduce 26

State 111:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 112:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 113:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 114:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 115:
     (16) stat ::= FOR ident_list IN exp_list DO block END *

                     {default} reduce 16

State 116:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 117:
     (27) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 27

State 118:
     (62) var ::= IDENT *

                     {default} reduce 62

State 119:
     (44) exp ::= PIPE exp PIPE *

                     {default} reduce 44

State 120:
     (43) exp ::= STRING *

                     {default} reduce 43

State 121:
     (42) exp ::= REAL *

                     {default} reduce 42

State 122:
     (41) exp ::= INT *

                     {default} reduce 41

State 123:
     (40) exp ::= TRUE *

                     {default} reduce 40

State 124:
     (39) exp ::= FALSE *

                     {default} reduce 39

State 125:
     (38) exp ::= NIL *

                     {default} reduce 38

State 126:
     (37) exp ::= function *

                     {default} reduce 37

State 127:
     (35) prefixexp ::= PL exp PR *

                     {default} reduce 35

State 128:
     (34) prefixexp ::= functioncall *

                     {default} reduce 34

State 129:
     (33) prefixexp ::= var *

                     {default} reduce 33

State 130:
     (32) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 32

State 131:
     (31) functioncall ::= prefixexp PL PR *

                     {default} reduce 31

State 132:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 133:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 134:
     (25) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 25

State 135:
     (24) ident_list ::= IDENT *

                     {default} reduce 24

State 136:
     (28) function ::= DEF func_body *

                     {default} reduce 28

State 137:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: IDENT
   27: ASSIG
   28: GLOBAL
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: COMMA
   43: DEF
   44: PL
   45: PR
   46: NIL
   47: FALSE
   48: TRUE
   49: INT
   50: REAL
   51: STRING
   52: PIPE
   53: error:
   54: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO IDENT GLOBAL LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL NIL FALSE TRUE INT REAL STRING PIPE
   55: block: <lambda> MINUS NOT NL SCOLON DO IDENT GLOBAL LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL NIL FALSE TRUE INT REAL STRING PIPE
   56: stat_list: <lambda> MINUS NOT NL SCOLON DO IDENT GLOBAL LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL NIL FALSE TRUE INT REAL STRING PIPE
   57: stat: <lambda> MINUS NOT DO IDENT GLOBAL LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL NIL FALSE TRUE INT REAL STRING PIPE
   58: exp: MINUS NOT IDENT DEF PL NIL FALSE TRUE INT REAL STRING PIPE
   59: ident_list: IDENT
   60: exp_list: MINUS NOT IDENT DEF PL NIL FALSE TRUE INT REAL STRING PIPE
   61: else: <lambda> ELSE ELSEIF
   62: func_body: PL
   63: function: DEF
   64: functioncall: IDENT PL
   65: prefixexp: IDENT PL
   66: var: IDENT
