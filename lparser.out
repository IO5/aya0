State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                   TERMINATION shift  110
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         chunk accept
                         block shift  106
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  83
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  44
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  120
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  46
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= FOR ident_list IN exp_list DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  87
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  88
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  89
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  103
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                         block shift  84
                     stat_list shift  82
                          stat shift  144
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                          stat shift  111
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                            DO shift  8
                        GLOBAL shift  93
                         IDENT shift  126
                         LOCAL shift  77
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  48
                            IF shift  17
                        RETURN shift  16
                          NEXT shift  119
                         BREAK shift  118
                           DEF shift  43
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                          stat shift  148
                           exp shift  63
                           var shift  102
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= SBL * SBR
          exp ::= * SBL exp_list SBR
          exp ::= SBL * exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           SBR shift  130
                           CBL shift  101
                          PIPE shift  36
                           exp shift  61
                           var shift  140
                      exp_list shift  78
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                            PR shift  142
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  61
                           var shift  140
                      exp_list shift  79
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 14:
          stat ::= FOR ident_list IN * exp_list DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  61
                           var shift  140
                      exp_list shift  75
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 15:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  51
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 16:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  56
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 17:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  52
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 18:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  57
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 19:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  53
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 20:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  58
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 21:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  59
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 22:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  95
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 23:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  96
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 24:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  97
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  98
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  99
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  100
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  73
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  74
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  72
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  67
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  68
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  69
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  70
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  71
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  54
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  66
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  55
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  60
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  65
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 41:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  62
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 42:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  22
                           NOT shift  23
                         IDENT shift  126
                           DEF shift  50
                            PL shift  38
                        STRING shift  139
                           NIL shift  135
                         FALSE shift  134
                          TRUE shift  133
                           INT shift  132
                          REAL shift  131
                           SBL shift  12
                           CBL shift  101
                          PIPE shift  36
                           exp shift  64
                           var shift  140
                      function shift  136
                  functioncall shift  138
                     prefixexp shift  80

State 43:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  115
                            PL shift  47
                    func_ident shift  45
                     func_body shift  147

State 44:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  114
                     {default} reduce 18

State 45:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  85
                            PL shift  47
                     func_body shift  117

State 46:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  86
                     {default} reduce 18

State 47:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  146
                            PR shift  1
                    ident_list shift  81

State 48:
          stat ::= FOR * ident_list IN exp_list DO block END
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT

                         IDENT shift  146
                    ident_list shift  76

State 49:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  47
                     func_body shift  124

State 50:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  47
                     func_body shift  147

State 51:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                          THEN shift  2

State 52:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                          THEN shift  4

State 53:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                            DO shift  7

State 54:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                          PIPE shift  127

State 55:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                            PR shift  137

State 56:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 21

State 57:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 15

State 58:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 13

State 59:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 10

State 60:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (70) exp_list ::= exp_list COMMA exp *

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 70

State 61:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (69) exp_list ::= exp *

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 69

State 62:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 9

State 63:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  42
                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 7

State 64:
          exp ::= exp * OR exp
     (50) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  40
                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 50

State 65:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (51) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  31
                           NEQ shift  32
                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 51

State 66:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (52) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 52

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (57) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 57

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (56) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  37
                             G shift  35
                           LEQ shift  34
                           GEQ shift  33
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 56

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (55) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 55

State 70:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (54) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 54

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (53) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  30
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 53

State 72:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (58) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  29
                         MINUS shift  28
                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 58

State 73:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (60) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 60

State 74:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (59) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  27
                           DIV shift  26
                           MOD shift  25
                           EXP shift  24
                     {default} reduce 59

State 75:
          stat ::= FOR ident_list IN exp_list * DO block END
          exp_list ::= exp_list * COMMA exp

                            DO shift  5
                         COMMA shift  39

State 76:
          stat ::= FOR ident_list * IN exp_list DO block END
          ident_list ::= ident_list * COMMA IDENT

                            IN shift  14
                         COMMA shift  104

State 77:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  91
                           DEF shift  90

State 78:
          exp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  39
                           SBR shift  129

State 79:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  39
                            PR shift  141

State 80:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (39) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT

                           DOT shift  94
                            PL shift  13
                     {default} reduce 39

State 81:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                         COMMA shift  104
                            PR shift  9

State 82:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 83:
          func_body ::= PL PR block * END

                           END shift  112

State 84:
          func_body ::= PL ident_list PR block * END

                           END shift  113

State 85:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  116

State 86:
          stat ::= IF exp THEN block else * END

                           END shift  121

State 87:
          stat ::= FOR ident_list IN exp_list DO block * END

                           END shift  122

State 88:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  18

State 89:
          stat ::= WHILE exp DO block * END

                           END shift  123

State 90:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  49

State 91:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  20
                     {default} reduce 12

State 92:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  21
                     {default} reduce 11

State 93:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  92

State 94:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  125

State 95:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (66) exp ::= MINUS exp *

                           EXP shift  24
                     {default} reduce 66

State 96:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (65) exp ::= NOT exp *

                           EXP shift  24
                     {default} reduce 65

State 97:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (64) exp ::= exp EXP exp *

                           EXP shift  24
                     {default} reduce 64

State 98:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (63) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  24
                     {default} reduce 63

State 99:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (62) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  24
                     {default} reduce 62

State 100:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (61) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  24
                     {default} reduce 61

State 101:
          exp ::= CBL * CBR

                           CBR shift  128

State 102:
          stat ::= var * ASSIG exp
     (35) prefixexp ::= var *

                         ASSIG shift  41
                     {default} reduce 35

State 103:
          stat ::= DO block * END

                           END shift  143

State 104:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  145

State 105:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 106:
          chunk ::= block * EOS

                           EOS shift  105

State 107:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 108:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  107

State 109:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  108

State 110:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  109

State 111:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 112:
     (31) func_body ::= PL PR block END *

                     {default} reduce 31

State 113:
     (32) func_body ::= PL ident_list PR block END *

                     {default} reduce 32

State 114:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 115:
     (28) func_ident ::= IDENT *

                     {default} reduce 28

State 116:
     (29) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 29

State 117:
     (26) stat ::= DEF func_ident func_body *

                     {default} reduce 26

State 118:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 119:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 120:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 121:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 122:
     (16) stat ::= FOR ident_list IN exp_list DO block END *

                     {default} reduce 16

State 123:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 124:
     (27) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 27

State 125:
     (68) var ::= prefixexp DOT IDENT *

                     {default} reduce 68

State 126:
     (67) var ::= IDENT *

                     {default} reduce 67

State 127:
     (49) exp ::= PIPE exp PIPE *

                     {default} reduce 49

State 128:
     (48) exp ::= CBL CBR *

                     {default} reduce 48

State 129:
     (47) exp ::= SBL exp_list SBR *

                     {default} reduce 47

State 130:
     (46) exp ::= SBL SBR *

                     {default} reduce 46

State 131:
     (45) exp ::= REAL *

                     {default} reduce 45

State 132:
     (44) exp ::= INT *

                     {default} reduce 44

State 133:
     (43) exp ::= TRUE *

                     {default} reduce 43

State 134:
     (42) exp ::= FALSE *

                     {default} reduce 42

State 135:
     (41) exp ::= NIL *

                     {default} reduce 41

State 136:
     (40) exp ::= function *

                     {default} reduce 40

State 137:
     (38) prefixexp ::= PL exp PR *

                     {default} reduce 38

State 138:
     (37) prefixexp ::= functioncall *

                     {default} reduce 37

State 139:
     (36) prefixexp ::= STRING *

                     {default} reduce 36

State 140:
     (35) prefixexp ::= var *

                     {default} reduce 35

State 141:
     (34) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 34

State 142:
     (33) functioncall ::= prefixexp PL PR *

                     {default} reduce 33

State 143:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 144:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 145:
     (25) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 25

State 146:
     (24) ident_list ::= IDENT *

                     {default} reduce 24

State 147:
     (30) function ::= DEF func_body *

                     {default} reduce 30

State 148:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: ASSIG
   27: GLOBAL
   28: IDENT
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: COMMA
   43: DEF
   44: PL
   45: PR
   46: STRING
   47: NIL
   48: FALSE
   49: TRUE
   50: INT
   51: REAL
   52: SBL
   53: SBR
   54: CBL
   55: CBR
   56: PIPE
   57: error:
   58: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   59: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   60: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   61: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   62: exp: MINUS NOT IDENT DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   63: var: IDENT PL STRING
   64: ident_list: IDENT
   65: exp_list: MINUS NOT IDENT DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   66: else: <lambda> ELSE ELSEIF
   67: func_ident: IDENT
   68: func_body: PL
   69: function: DEF
   70: functioncall: IDENT PL STRING
   71: prefixexp: IDENT PL STRING
