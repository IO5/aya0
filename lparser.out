State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                   TERMINATION shift  133
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         chunk accept
                         block shift  129
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  102
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  58
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  152
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  60
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= FOR IDENT IN exp DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  111
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  114
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  115
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  126
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                         block shift  103
                     stat_list shift  101
                          stat shift  178
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                          stat shift  134
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                            DO shift  8
                         LOCAL shift  96
                         IDENT shift  159
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  113
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  151
                         BREAK shift  150
                         CLASS shift  109
                            PL shift  44
                           DEF shift  49
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                          stat shift  182
                           exp shift  84
                           var shift  125
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= CBL * CBR
          prefixexp ::= * CBL dict_list CBR
          prefixexp ::= CBL * dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= * exp COLON exp
          dict_list ::= * dict_list COMMA exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           CBR shift  168
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  72
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                     dict_list shift  97

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= SBL * SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= SBL * exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           SBR shift  170
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  80
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                      exp_list shift  98

State 14:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                            PR shift  176
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  80
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95
                      exp_list shift  99

State 15:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  66
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 16:
          class_body ::= NL IDENT ASSIG * exp class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  50
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 17:
          class_body ::= SCOLON IDENT ASSIG * exp class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  51
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 18:
          stat ::= CLASS IDENT PL * exp PR class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  67
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 19:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  76
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 20:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  68
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 21:
          stat ::= FOR IDENT IN * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  69
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 22:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  77
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 23:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  70
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 24:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  78
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          var ::= prefixexp SBL * exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  71
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  81
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  119
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  120
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  121
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  122
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  123
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  124
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  93
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  94
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  89
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  90
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  91
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  92
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  73
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  88
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= dict_list COMMA exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  82
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 42:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          dict_list ::= dict_list COMMA * exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  74
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 43:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  87
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 44:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  75
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 45:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  79
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 46:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  86
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 47:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  83
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 48:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= * STRING
          prefixexp ::= * SBL SBR
          prefixexp ::= * SBL exp_list SBR
          prefixexp ::= * CBL CBR
          prefixexp ::= * CBL dict_list CBR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  27
                           NOT shift  28
                         IDENT shift  159
                            PL shift  44
                           DEF shift  65
                        STRING shift  171
                           SBL shift  13
                           CBL shift  12
                           NIL shift  165
                         FALSE shift  164
                          TRUE shift  163
                           INT shift  162
                          REAL shift  161
                          PIPE shift  39
                           exp shift  85
                           var shift  174
                      function shift  166
                  functioncall shift  173
                     prefixexp shift  95

State 49:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  138
                            PL shift  61
                     func_body shift  181
                    func_ident shift  59

State 50:
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= NL IDENT ASSIG exp * class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                    class_body shift  141

State 51:
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          class_body ::= SCOLON IDENT ASSIG exp * class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                    class_body shift  143

State 52:
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= SCOLON * class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= SCOLON * DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          class_body ::= SCOLON * IDENT ASSIG exp class_body

                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                         IDENT shift  107
                           DEF shift  108
                    class_body shift  145

State 53:
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= NL * class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= NL * DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= NL * IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                         IDENT shift  105
                           DEF shift  106
                    class_body shift  146

State 54:
          stat ::= CLASS IDENT * class_body
          stat ::= CLASS IDENT * PL exp PR class_body
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                            PL shift  18
                    class_body shift  149

State 55:
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= NL DEF IDENT func_body * class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                    class_body shift  142

State 56:
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= SCOLON DEF IDENT func_body * class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                    class_body shift  144

State 57:
          stat ::= CLASS IDENT PL exp PR * class_body
          class_body ::= * END
          class_body ::= * NL class_body
          class_body ::= * SCOLON class_body
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  53
                        SCOLON shift  52
                           END shift  147
                    class_body shift  148

State 58:
     (16) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  137
                     {default} reduce 16

State 59:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  104
                            PL shift  61
                     func_body shift  140

State 60:
          stat ::= IF exp THEN block * else END
     (16) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  110
                     {default} reduce 16

State 61:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  180
                            PR shift  1
                    ident_list shift  100

State 62:
          class_body ::= NL DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  55

State 63:
          class_body ::= SCOLON DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  56

State 64:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  156

State 65:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  181

State 66:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                          THEN shift  2

State 67:
          stat ::= CLASS IDENT PL exp * PR class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                            PR shift  57

State 68:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                          THEN shift  4

State 69:
          stat ::= FOR IDENT IN exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                            DO shift  5

State 70:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                            DO shift  7

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
          var ::= prefixexp SBL exp * SBR

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                           SBR shift  157

State 72:
          dict_list ::= exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                         COLON shift  26

State 73:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                          PIPE shift  160

State 74:
          dict_list ::= dict_list COMMA exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                         COLON shift  41

State 75:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                            PR shift  172

State 76:
     (19) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 19

State 77:
     (13) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 13

State 78:
     (11) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 11

State 79:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (80) exp_list ::= exp_list COMMA exp *

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 80

State 80:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (79) exp_list ::= exp *

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 79

State 81:
     (57) dict_list ::= exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 57

State 82:
     (58) dict_list ::= dict_list COMMA exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 58

State 83:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 9

State 84:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 7

State 85:
          exp ::= exp * OR exp
     (60) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 60

State 86:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (61) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 61

State 87:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (62) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 62

State 88:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (63) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 63

State 89:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (67) exp ::= exp EQ exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 67

State 90:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (66) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 66

State 91:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (65) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 65

State 92:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (64) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                          PLUS shift  34
                         MINUS shift  33
                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 64

State 93:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (69) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 69

State 94:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
     (68) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  32
                           DIV shift  31
                           MOD shift  30
                           EXP shift  29
                     {default} reduce 68

State 95:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (50) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT
          var ::= prefixexp * SBL exp SBR

                           DOT shift  118
                            PL shift  14
                           SBL shift  25
                     {default} reduce 50

State 96:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  117
                           DEF shift  116

State 97:
          prefixexp ::= CBL dict_list * CBR
          dict_list ::= dict_list * COMMA exp COLON exp

                         COMMA shift  42
                           CBR shift  167

State 98:
          prefixexp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  45
                           SBR shift  169

State 99:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                            PR shift  175
                         COMMA shift  45

State 100:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                            PR shift  9
                         COMMA shift  127

State 101:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 102:
          func_body ::= PL PR block * END

                           END shift  135

State 103:
          func_body ::= PL ident_list PR block * END

                           END shift  136

State 104:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  139

State 105:
          class_body ::= NL IDENT * ASSIG exp class_body

                         ASSIG shift  16

State 106:
          class_body ::= NL DEF * IDENT func_body class_body

                         IDENT shift  62

State 107:
          class_body ::= SCOLON IDENT * ASSIG exp class_body

                         ASSIG shift  17

State 108:
          class_body ::= SCOLON DEF * IDENT func_body class_body

                         IDENT shift  63

State 109:
          stat ::= CLASS * IDENT class_body
          stat ::= CLASS * IDENT PL exp PR class_body

                         IDENT shift  54

State 110:
          stat ::= IF exp THEN block else * END

                           END shift  153

State 111:
          stat ::= FOR IDENT IN exp DO block * END

                           END shift  154

State 112:
          stat ::= FOR IDENT * IN exp DO block END

                            IN shift  21

State 113:
          stat ::= FOR * IDENT IN exp DO block END

                         IDENT shift  112

State 114:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  22

State 115:
          stat ::= WHILE exp DO block * END

                           END shift  155

State 116:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  64

State 117:
     (10) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  24
                     {default} reduce 10

State 118:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  158

State 119:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (75) exp ::= MINUS exp *

                           EXP shift  29
                     {default} reduce 75

State 120:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (74) exp ::= NOT exp *

                           EXP shift  29
                     {default} reduce 74

State 121:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (73) exp ::= exp EXP exp *

                           EXP shift  29
                     {default} reduce 73

State 122:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (72) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  29
                     {default} reduce 72

State 123:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (71) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  29
                     {default} reduce 71

State 124:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (70) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  29
                     {default} reduce 70

State 125:
          stat ::= var * ASSIG exp
     (42) prefixexp ::= var *

                         ASSIG shift  47
                     {default} reduce 42

State 126:
          stat ::= DO block * END

                           END shift  177

State 127:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  179

State 128:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 129:
          chunk ::= block * EOS

                           EOS shift  128

State 130:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 131:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  130

State 132:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  131

State 133:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  132

State 134:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 135:
     (38) func_body ::= PL PR block END *

                     {default} reduce 38

State 136:
     (39) func_body ::= PL ident_list PR block END *

                     {default} reduce 39

State 137:
     (18) else ::= ELSEIF exp THEN block else *

                     {default} reduce 18

State 138:
     (35) func_ident ::= IDENT *

                     {default} reduce 35

State 139:
     (36) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 36

State 140:
     (33) stat ::= DEF func_ident func_body *

                     {default} reduce 33

State 141:
     (29) class_body ::= NL IDENT ASSIG exp class_body *

                     {default} reduce 29

State 142:
     (27) class_body ::= NL DEF IDENT func_body class_body *

                     {default} reduce 27

State 143:
     (30) class_body ::= SCOLON IDENT ASSIG exp class_body *

                     {default} reduce 30

State 144:
     (28) class_body ::= SCOLON DEF IDENT func_body class_body *

                     {default} reduce 28

State 145:
     (26) class_body ::= SCOLON class_body *

                     {default} reduce 26

State 146:
     (25) class_body ::= NL class_body *

                     {default} reduce 25

State 147:
     (24) class_body ::= END *

                     {default} reduce 24

State 148:
     (23) stat ::= CLASS IDENT PL exp PR class_body *

                     {default} reduce 23

State 149:
     (22) stat ::= CLASS IDENT class_body *

                     {default} reduce 22

State 150:
     (21) stat ::= BREAK *

                     {default} reduce 21

State 151:
     (20) stat ::= NEXT *

                     {default} reduce 20

State 152:
     (17) else ::= ELSE block *

                     {default} reduce 17

State 153:
     (15) stat ::= IF exp THEN block else END *

                     {default} reduce 15

State 154:
     (14) stat ::= FOR IDENT IN exp DO block END *

                     {default} reduce 14

State 155:
     (12) stat ::= WHILE exp DO block END *

                     {default} reduce 12

State 156:
     (34) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 34

State 157:
     (78) var ::= prefixexp SBL exp SBR *

                     {default} reduce 78

State 158:
     (77) var ::= prefixexp DOT IDENT *

                     {default} reduce 77

State 159:
     (76) var ::= IDENT *

                     {default} reduce 76

State 160:
     (59) exp ::= PIPE exp PIPE *

                     {default} reduce 59

State 161:
     (56) exp ::= REAL *

                     {default} reduce 56

State 162:
     (55) exp ::= INT *

                     {default} reduce 55

State 163:
     (54) exp ::= TRUE *

                     {default} reduce 54

State 164:
     (53) exp ::= FALSE *

                     {default} reduce 53

State 165:
     (52) exp ::= NIL *

                     {default} reduce 52

State 166:
     (51) exp ::= function *

                     {default} reduce 51

State 167:
     (49) prefixexp ::= CBL dict_list CBR *

                     {default} reduce 49

State 168:
     (48) prefixexp ::= CBL CBR *

                     {default} reduce 48

State 169:
     (47) prefixexp ::= SBL exp_list SBR *

                     {default} reduce 47

State 170:
     (46) prefixexp ::= SBL SBR *

                     {default} reduce 46

State 171:
     (45) prefixexp ::= STRING *

                     {default} reduce 45

State 172:
     (44) prefixexp ::= PL exp PR *

                     {default} reduce 44

State 173:
     (43) prefixexp ::= functioncall *

                     {default} reduce 43

State 174:
     (42) prefixexp ::= var *

                     {default} reduce 42

State 175:
     (41) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 41

State 176:
     (40) functioncall ::= prefixexp PL PR *

                     {default} reduce 40

State 177:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 178:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 179:
     (32) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 32

State 180:
     (31) ident_list ::= IDENT *

                     {default} reduce 31

State 181:
     (37) function ::= DEF func_body *

                     {default} reduce 37

State 182:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: PLUS
   10: MINUS
   11: MUL
   12: DIV
   13: MOD
   14: NOT
   15: EXP
   16: TERMINATION
   17: UNINITIALIZED
   18: WARNING
   19: DOT
   20: EOS
   21: NL
   22: SCOLON
   23: DO
   24: END
   25: ASSIG
   26: LOCAL
   27: IDENT
   28: WHILE
   29: REPEAT
   30: UNTIL
   31: FOR
   32: IN
   33: IF
   34: THEN
   35: ELSE
   36: ELSEIF
   37: RETURN
   38: NEXT
   39: BREAK
   40: CLASS
   41: PL
   42: PR
   43: DEF
   44: COMMA
   45: STRING
   46: SBL
   47: SBR
   48: CBL
   49: CBR
   50: NIL
   51: FALSE
   52: TRUE
   53: INT
   54: REAL
   55: COLON
   56: PIPE
   57: error:
   58: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO LOCAL IDENT WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   59: block: <lambda> MINUS NOT NL SCOLON DO LOCAL IDENT WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   60: stat_list: <lambda> MINUS NOT NL SCOLON DO LOCAL IDENT WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   61: stat: <lambda> MINUS NOT DO LOCAL IDENT WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   62: exp: MINUS NOT IDENT PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   63: var: IDENT PL STRING SBL CBL
   64: else: <lambda> ELSE ELSEIF
   65: class_body: NL SCOLON END
   66: func_body: PL
   67: ident_list: IDENT
   68: func_ident: IDENT
   69: function: DEF
   70: functioncall: IDENT PL STRING SBL CBL
   71: prefixexp: IDENT PL STRING SBL CBL
   72: exp_list: MINUS NOT IDENT PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
   73: dict_list: MINUS NOT IDENT PL DEF STRING SBL CBL NIL FALSE TRUE INT REAL PIPE
