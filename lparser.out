State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                   TERMINATION shift  133
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         chunk accept
                         block shift  129
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  102
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  51
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  149
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  56
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= FOR IDENT IN exp DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  109
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  112
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  113
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  126
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                         block shift  103
                     stat_list shift  101
                          stat shift  175
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                          stat shift  134
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                            DO shift  8
                        GLOBAL shift  117
                         IDENT shift  156
                         LOCAL shift  96
                         WHILE shift  21
                        REPEAT shift  6
                           FOR shift  111
                            IF shift  18
                        RETURN shift  17
                          NEXT shift  148
                         BREAK shift  147
                         CLASS shift  107
                            PL shift  44
                           DEF shift  49
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                          stat shift  179
                           exp shift  81
                           var shift  125
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= CBL * CBR
          exp ::= * CBL dict_list CBR
          exp ::= CBL * dict_list CBR
          dict_list ::= * exp COLON exp
          dict_list ::= * dict_list COMMA exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                           CBR shift  159
                          PIPE shift  39
                           exp shift  68
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                     dict_list shift  97

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= SBL * SBR
          exp ::= * SBL exp_list SBR
          exp ::= SBL * exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           SBR shift  161
                           CBL shift  12
                          PIPE shift  39
                           exp shift  77
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                      exp_list shift  98

State 14:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                            PR shift  173
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  77
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93
                      exp_list shift  99

State 15:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  62
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 16:
          stat ::= CLASS IDENT PL * exp PR class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  63
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 17:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  72
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 18:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  64
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 19:
          stat ::= FOR IDENT IN * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  65
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 20:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  73
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 21:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  66
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 22:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  74
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 23:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  75
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 24:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          var ::= prefixexp SBL * exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  67
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          dict_list ::= exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  78
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  119
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  120
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  121
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  122
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  123
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  124
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  91
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  92
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  90
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  86
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  87
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  88
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  89
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  69
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  85
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          dict_list ::= dict_list COMMA exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  79
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 42:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          dict_list ::= dict_list COMMA * exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  70
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 43:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  84
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 44:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  71
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 45:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  76
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 46:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  83
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 47:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  80
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 48:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  26
                           NOT shift  27
                         IDENT shift  156
                            PL shift  44
                           DEF shift  61
                        STRING shift  170
                           NIL shift  166
                         FALSE shift  165
                          TRUE shift  164
                           INT shift  163
                          REAL shift  162
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  39
                           exp shift  82
                           var shift  171
                      function shift  167
                  functioncall shift  169
                     prefixexp shift  93

State 49:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  138
                            PL shift  57
                     func_body shift  178
                    func_ident shift  52

State 50:
          stat ::= CLASS IDENT * class_body
          stat ::= CLASS IDENT * PL exp PR class_body
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body

                            NL shift  95
                        SCOLON shift  94
                            PL shift  16
                    class_body shift  146

State 51:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  137
                     {default} reduce 18

State 52:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  104
                            PL shift  57
                     func_body shift  140

State 53:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= SCOLON DEF IDENT func_body * class_body

                            NL shift  95
                        SCOLON shift  94
                    class_body shift  142

State 54:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= NL DEF IDENT func_body * class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body

                            NL shift  95
                        SCOLON shift  94
                    class_body shift  141

State 55:
          stat ::= CLASS IDENT PL exp PR * class_body
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body

                            NL shift  95
                        SCOLON shift  94
                    class_body shift  145

State 56:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  108
                     {default} reduce 18

State 57:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  177
                            PR shift  1
                    ident_list shift  100

State 58:
          class_body ::= SCOLON DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  57
                     func_body shift  53

State 59:
          class_body ::= NL DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  57
                     func_body shift  54

State 60:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  57
                     func_body shift  153

State 61:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  57
                     func_body shift  178

State 62:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                          THEN shift  2

State 63:
          stat ::= CLASS IDENT PL exp * PR class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                            PR shift  55

State 64:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                          THEN shift  4

State 65:
          stat ::= FOR IDENT IN exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                            DO shift  5

State 66:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                            DO shift  7

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
          var ::= prefixexp SBL exp * SBR

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                           SBR shift  154

State 68:
          dict_list ::= exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                         COLON shift  25

State 69:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                          PIPE shift  157

State 70:
          dict_list ::= dict_list COMMA exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                         COLON shift  41

State 71:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                            PR shift  168

State 72:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 21

State 73:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 15

State 74:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 13

State 75:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 10

State 76:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (80) exp_list ::= exp_list COMMA exp *

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 80

State 77:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (79) exp_list ::= exp *

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 79

State 78:
     (56) dict_list ::= exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 56

State 79:
     (57) dict_list ::= dict_list COMMA exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 57

State 80:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 9

State 81:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  48
                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 7

State 82:
          exp ::= exp * OR exp
     (59) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  46
                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 59

State 83:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (60) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  35
                           NEQ shift  36
                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 60

State 84:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (61) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 61

State 85:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (62) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 62

State 86:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (66) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 66

State 87:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (65) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  43
                             G shift  40
                           LEQ shift  38
                           GEQ shift  37
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 65

State 88:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (64) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 64

State 89:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (63) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  34
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 63

State 90:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (67) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  33
                         MINUS shift  32
                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 67

State 91:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (69) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 69

State 92:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (68) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  31
                           DIV shift  30
                           MOD shift  29
                           EXP shift  28
                     {default} reduce 68

State 93:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (45) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT
          var ::= prefixexp * SBL exp SBR

                           DOT shift  118
                            PL shift  14
                           SBL shift  24
                     {default} reduce 45

State 94:
          class_body ::= SCOLON * END
          class_body ::= SCOLON * DEF IDENT func_body class_body

                           END shift  143
                           DEF shift  105

State 95:
          class_body ::= NL * END
          class_body ::= NL * DEF IDENT func_body class_body

                           END shift  144
                           DEF shift  106

State 96:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  115
                           DEF shift  114

State 97:
          exp ::= CBL dict_list * CBR
          dict_list ::= dict_list * COMMA exp COLON exp

                         COMMA shift  42
                           CBR shift  158

State 98:
          exp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  45
                           SBR shift  160

State 99:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                            PR shift  172
                         COMMA shift  45

State 100:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                            PR shift  9
                         COMMA shift  127

State 101:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 102:
          func_body ::= PL PR block * END

                           END shift  135

State 103:
          func_body ::= PL ident_list PR block * END

                           END shift  136

State 104:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  139

State 105:
          class_body ::= SCOLON DEF * IDENT func_body class_body

                         IDENT shift  58

State 106:
          class_body ::= NL DEF * IDENT func_body class_body

                         IDENT shift  59

State 107:
          stat ::= CLASS * IDENT class_body
          stat ::= CLASS * IDENT PL exp PR class_body

                         IDENT shift  50

State 108:
          stat ::= IF exp THEN block else * END

                           END shift  150

State 109:
          stat ::= FOR IDENT IN exp DO block * END

                           END shift  151

State 110:
          stat ::= FOR IDENT * IN exp DO block END

                            IN shift  19

State 111:
          stat ::= FOR * IDENT IN exp DO block END

                         IDENT shift  110

State 112:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  20

State 113:
          stat ::= WHILE exp DO block * END

                           END shift  152

State 114:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  60

State 115:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  22
                     {default} reduce 12

State 116:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  23
                     {default} reduce 11

State 117:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  116

State 118:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  155

State 119:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (75) exp ::= MINUS exp *

                           EXP shift  28
                     {default} reduce 75

State 120:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (74) exp ::= NOT exp *

                           EXP shift  28
                     {default} reduce 74

State 121:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (73) exp ::= exp EXP exp *

                           EXP shift  28
                     {default} reduce 73

State 122:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (72) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  28
                     {default} reduce 72

State 123:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (71) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  28
                     {default} reduce 71

State 124:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (70) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  28
                     {default} reduce 70

State 125:
          stat ::= var * ASSIG exp
     (41) prefixexp ::= var *

                         ASSIG shift  47
                     {default} reduce 41

State 126:
          stat ::= DO block * END

                           END shift  174

State 127:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  176

State 128:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 129:
          chunk ::= block * EOS

                           EOS shift  128

State 130:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 131:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  130

State 132:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  131

State 133:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  132

State 134:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 135:
     (37) func_body ::= PL PR block END *

                     {default} reduce 37

State 136:
     (38) func_body ::= PL ident_list PR block END *

                     {default} reduce 38

State 137:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 138:
     (34) func_ident ::= IDENT *

                     {default} reduce 34

State 139:
     (35) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 35

State 140:
     (32) stat ::= DEF func_ident func_body *

                     {default} reduce 32

State 141:
     (28) class_body ::= NL DEF IDENT func_body class_body *

                     {default} reduce 28

State 142:
     (29) class_body ::= SCOLON DEF IDENT func_body class_body *

                     {default} reduce 29

State 143:
     (27) class_body ::= SCOLON END *

                     {default} reduce 27

State 144:
     (26) class_body ::= NL END *

                     {default} reduce 26

State 145:
     (25) stat ::= CLASS IDENT PL exp PR class_body *

                     {default} reduce 25

State 146:
     (24) stat ::= CLASS IDENT class_body *

                     {default} reduce 24

State 147:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 148:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 149:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 150:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 151:
     (16) stat ::= FOR IDENT IN exp DO block END *

                     {default} reduce 16

State 152:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 153:
     (33) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 33

State 154:
     (78) var ::= prefixexp SBL exp SBR *

                     {default} reduce 78

State 155:
     (77) var ::= prefixexp DOT IDENT *

                     {default} reduce 77

State 156:
     (76) var ::= IDENT *

                     {default} reduce 76

State 157:
     (58) exp ::= PIPE exp PIPE *

                     {default} reduce 58

State 158:
     (55) exp ::= CBL dict_list CBR *

                     {default} reduce 55

State 159:
     (54) exp ::= CBL CBR *

                     {default} reduce 54

State 160:
     (53) exp ::= SBL exp_list SBR *

                     {default} reduce 53

State 161:
     (52) exp ::= SBL SBR *

                     {default} reduce 52

State 162:
     (51) exp ::= REAL *

                     {default} reduce 51

State 163:
     (50) exp ::= INT *

                     {default} reduce 50

State 164:
     (49) exp ::= TRUE *

                     {default} reduce 49

State 165:
     (48) exp ::= FALSE *

                     {default} reduce 48

State 166:
     (47) exp ::= NIL *

                     {default} reduce 47

State 167:
     (46) exp ::= function *

                     {default} reduce 46

State 168:
     (44) prefixexp ::= PL exp PR *

                     {default} reduce 44

State 169:
     (43) prefixexp ::= functioncall *

                     {default} reduce 43

State 170:
     (42) prefixexp ::= STRING *

                     {default} reduce 42

State 171:
     (41) prefixexp ::= var *

                     {default} reduce 41

State 172:
     (40) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 40

State 173:
     (39) functioncall ::= prefixexp PL PR *

                     {default} reduce 39

State 174:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 175:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 176:
     (31) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 31

State 177:
     (30) ident_list ::= IDENT *

                     {default} reduce 30

State 178:
     (36) function ::= DEF func_body *

                     {default} reduce 36

State 179:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: ASSIG
   27: GLOBAL
   28: IDENT
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: CLASS
   43: PL
   44: PR
   45: DEF
   46: COMMA
   47: STRING
   48: NIL
   49: FALSE
   50: TRUE
   51: INT
   52: REAL
   53: SBL
   54: SBR
   55: CBL
   56: CBR
   57: COLON
   58: PIPE
   59: error:
   60: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   61: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   62: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   63: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   64: exp: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   65: var: IDENT PL STRING
   66: else: <lambda> ELSE ELSEIF
   67: class_body: NL SCOLON
   68: func_body: PL
   69: ident_list: IDENT
   70: func_ident: IDENT
   71: function: DEF
   72: functioncall: IDENT PL STRING
   73: prefixexp: IDENT PL STRING
   74: exp_list: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   75: dict_list: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
