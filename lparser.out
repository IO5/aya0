State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                   TERMINATION shift  139
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         chunk accept
                         block shift  135
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  106
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  55
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  157
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  60
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= FOR IDENT IN exp DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  115
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  118
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  119
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  132
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                         block shift  107
                     stat_list shift  105
                          stat shift  183
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                          stat shift  140
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * CLASS IDENT class_body
          stat ::= * CLASS IDENT PL exp PR class_body
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                            DO shift  8
                        GLOBAL shift  123
                         IDENT shift  164
                         LOCAL shift  100
                         WHILE shift  23
                        REPEAT shift  6
                           FOR shift  117
                            IF shift  20
                        RETURN shift  19
                          NEXT shift  156
                         BREAK shift  155
                         CLASS shift  113
                            PL shift  46
                           DEF shift  51
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                          stat shift  187
                           exp shift  85
                           var shift  131
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= CBL * CBR
          exp ::= * CBL dict_list CBR
          exp ::= CBL * dict_list CBR
          dict_list ::= * exp COLON exp
          dict_list ::= * dict_list COMMA exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                           CBR shift  167
                          PIPE shift  41
                           exp shift  72
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                     dict_list shift  101

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= SBL * SBR
          exp ::= * SBL exp_list SBR
          exp ::= SBL * exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           SBR shift  169
                           CBL shift  12
                          PIPE shift  41
                           exp shift  81
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                      exp_list shift  102

State 14:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                            PR shift  181
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  81
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99
                      exp_list shift  103

State 15:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  66
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 16:
          class_body ::= NL IDENT ASSIG * exp class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  52
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 17:
          class_body ::= SCOLON IDENT ASSIG * exp class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  53
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 18:
          stat ::= CLASS IDENT PL * exp PR class_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  67
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 19:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  76
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 20:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  68
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 21:
          stat ::= FOR IDENT IN * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  69
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 22:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  77
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 23:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  70
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 24:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  78
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 25:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  79
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          var ::= prefixexp SBL * exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  71
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          dict_list ::= exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  82
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  125
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  126
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  127
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  128
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  129
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  130
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  95
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  96
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  94
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  90
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  91
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  92
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  93
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  73
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 42:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  89
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 43:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          dict_list ::= dict_list COMMA exp COLON * exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  83
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 44:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          dict_list ::= dict_list COMMA * exp COLON exp
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  74
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 45:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  88
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 46:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  75
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 47:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  80
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 48:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  87
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 49:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  84
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 50:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * CBL dict_list CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  28
                           NOT shift  29
                         IDENT shift  164
                            PL shift  46
                           DEF shift  65
                        STRING shift  178
                           NIL shift  174
                         FALSE shift  173
                          TRUE shift  172
                           INT shift  171
                          REAL shift  170
                           SBL shift  13
                           CBL shift  12
                          PIPE shift  41
                           exp shift  86
                           var shift  179
                      function shift  175
                  functioncall shift  177
                     prefixexp shift  99

State 51:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  144
                            PL shift  61
                     func_body shift  186
                    func_ident shift  56

State 52:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= NL IDENT ASSIG exp * class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            NL shift  98
                        SCOLON shift  97
                    class_body shift  147

State 53:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body
          class_body ::= SCOLON IDENT ASSIG exp * class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            NL shift  98
                        SCOLON shift  97
                    class_body shift  149

State 54:
          stat ::= CLASS IDENT * class_body
          stat ::= CLASS IDENT * PL exp PR class_body
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  98
                        SCOLON shift  97
                            PL shift  18
                    class_body shift  154

State 55:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  143
                     {default} reduce 18

State 56:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  108
                            PL shift  61
                     func_body shift  146

State 57:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= SCOLON DEF IDENT func_body * class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  98
                        SCOLON shift  97
                    class_body shift  150

State 58:
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= NL DEF IDENT func_body * class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  98
                        SCOLON shift  97
                    class_body shift  148

State 59:
          stat ::= CLASS IDENT PL exp PR * class_body
          class_body ::= * NL END
          class_body ::= * SCOLON END
          class_body ::= * NL DEF IDENT func_body class_body
          class_body ::= * SCOLON DEF IDENT func_body class_body
          class_body ::= * NL IDENT ASSIG exp class_body
          class_body ::= * SCOLON IDENT ASSIG exp class_body

                            NL shift  98
                        SCOLON shift  97
                    class_body shift  153

State 60:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  15
                          else shift  114
                     {default} reduce 18

State 61:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  185
                            PR shift  1
                    ident_list shift  104

State 62:
          class_body ::= SCOLON DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  57

State 63:
          class_body ::= NL DEF IDENT * func_body class_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  58

State 64:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  161

State 65:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  61
                     func_body shift  186

State 66:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                          THEN shift  2

State 67:
          stat ::= CLASS IDENT PL exp * PR class_body
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            PR shift  59

State 68:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                          THEN shift  4

State 69:
          stat ::= FOR IDENT IN exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            DO shift  5

State 70:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            DO shift  7

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
          var ::= prefixexp SBL exp * SBR

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                           SBR shift  162

State 72:
          dict_list ::= exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                         COLON shift  27

State 73:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                          PIPE shift  165

State 74:
          dict_list ::= dict_list COMMA exp * COLON exp
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                         COLON shift  43

State 75:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                            PR shift  176

State 76:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 21

State 77:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 15

State 78:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 13

State 79:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 10

State 80:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (82) exp_list ::= exp_list COMMA exp *

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 82

State 81:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (81) exp_list ::= exp *

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 81

State 82:
     (58) dict_list ::= exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 58

State 83:
     (59) dict_list ::= dict_list COMMA exp COLON exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 59

State 84:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 9

State 85:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  50
                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 7

State 86:
          exp ::= exp * OR exp
     (61) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  48
                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 61

State 87:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (62) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  37
                           NEQ shift  38
                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 62

State 88:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (63) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 63

State 89:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (64) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 64

State 90:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (68) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 68

State 91:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (67) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  45
                             G shift  42
                           LEQ shift  40
                           GEQ shift  39
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 67

State 92:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (66) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 66

State 93:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (65) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  36
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 65

State 94:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (69) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  35
                         MINUS shift  34
                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 69

State 95:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (71) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 71

State 96:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (70) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  33
                           DIV shift  32
                           MOD shift  31
                           EXP shift  30
                     {default} reduce 70

State 97:
          class_body ::= SCOLON * END
          class_body ::= SCOLON * DEF IDENT func_body class_body
          class_body ::= SCOLON * IDENT ASSIG exp class_body

                           END shift  151
                         IDENT shift  110
                           DEF shift  111

State 98:
          class_body ::= NL * END
          class_body ::= NL * DEF IDENT func_body class_body
          class_body ::= NL * IDENT ASSIG exp class_body

                           END shift  152
                         IDENT shift  109
                           DEF shift  112

State 99:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (47) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT
          var ::= prefixexp * SBL exp SBR

                           DOT shift  124
                            PL shift  14
                           SBL shift  26
                     {default} reduce 47

State 100:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  121
                           DEF shift  120

State 101:
          exp ::= CBL dict_list * CBR
          dict_list ::= dict_list * COMMA exp COLON exp

                         COMMA shift  44
                           CBR shift  166

State 102:
          exp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  47
                           SBR shift  168

State 103:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                            PR shift  180
                         COMMA shift  47

State 104:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                            PR shift  9
                         COMMA shift  133

State 105:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 106:
          func_body ::= PL PR block * END

                           END shift  141

State 107:
          func_body ::= PL ident_list PR block * END

                           END shift  142

State 108:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  145

State 109:
          class_body ::= NL IDENT * ASSIG exp class_body

                         ASSIG shift  16

State 110:
          class_body ::= SCOLON IDENT * ASSIG exp class_body

                         ASSIG shift  17

State 111:
          class_body ::= SCOLON DEF * IDENT func_body class_body

                         IDENT shift  62

State 112:
          class_body ::= NL DEF * IDENT func_body class_body

                         IDENT shift  63

State 113:
          stat ::= CLASS * IDENT class_body
          stat ::= CLASS * IDENT PL exp PR class_body

                         IDENT shift  54

State 114:
          stat ::= IF exp THEN block else * END

                           END shift  158

State 115:
          stat ::= FOR IDENT IN exp DO block * END

                           END shift  159

State 116:
          stat ::= FOR IDENT * IN exp DO block END

                            IN shift  21

State 117:
          stat ::= FOR * IDENT IN exp DO block END

                         IDENT shift  116

State 118:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  22

State 119:
          stat ::= WHILE exp DO block * END

                           END shift  160

State 120:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  64

State 121:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  24
                     {default} reduce 12

State 122:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  25
                     {default} reduce 11

State 123:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  122

State 124:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  163

State 125:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (77) exp ::= MINUS exp *

                           EXP shift  30
                     {default} reduce 77

State 126:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (76) exp ::= NOT exp *

                           EXP shift  30
                     {default} reduce 76

State 127:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (75) exp ::= exp EXP exp *

                           EXP shift  30
                     {default} reduce 75

State 128:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (74) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  30
                     {default} reduce 74

State 129:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (73) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  30
                     {default} reduce 73

State 130:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (72) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  30
                     {default} reduce 72

State 131:
          stat ::= var * ASSIG exp
     (43) prefixexp ::= var *

                         ASSIG shift  49
                     {default} reduce 43

State 132:
          stat ::= DO block * END

                           END shift  182

State 133:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  184

State 134:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 135:
          chunk ::= block * EOS

                           EOS shift  134

State 136:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 137:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  136

State 138:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  137

State 139:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  138

State 140:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 141:
     (39) func_body ::= PL PR block END *

                     {default} reduce 39

State 142:
     (40) func_body ::= PL ident_list PR block END *

                     {default} reduce 40

State 143:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 144:
     (36) func_ident ::= IDENT *

                     {default} reduce 36

State 145:
     (37) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 37

State 146:
     (34) stat ::= DEF func_ident func_body *

                     {default} reduce 34

State 147:
     (30) class_body ::= NL IDENT ASSIG exp class_body *

                     {default} reduce 30

State 148:
     (28) class_body ::= NL DEF IDENT func_body class_body *

                     {default} reduce 28

State 149:
     (31) class_body ::= SCOLON IDENT ASSIG exp class_body *

                     {default} reduce 31

State 150:
     (29) class_body ::= SCOLON DEF IDENT func_body class_body *

                     {default} reduce 29

State 151:
     (27) class_body ::= SCOLON END *

                     {default} reduce 27

State 152:
     (26) class_body ::= NL END *

                     {default} reduce 26

State 153:
     (25) stat ::= CLASS IDENT PL exp PR class_body *

                     {default} reduce 25

State 154:
     (24) stat ::= CLASS IDENT class_body *

                     {default} reduce 24

State 155:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 156:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 157:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 158:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 159:
     (16) stat ::= FOR IDENT IN exp DO block END *

                     {default} reduce 16

State 160:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 161:
     (35) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 35

State 162:
     (80) var ::= prefixexp SBL exp SBR *

                     {default} reduce 80

State 163:
     (79) var ::= prefixexp DOT IDENT *

                     {default} reduce 79

State 164:
     (78) var ::= IDENT *

                     {default} reduce 78

State 165:
     (60) exp ::= PIPE exp PIPE *

                     {default} reduce 60

State 166:
     (57) exp ::= CBL dict_list CBR *

                     {default} reduce 57

State 167:
     (56) exp ::= CBL CBR *

                     {default} reduce 56

State 168:
     (55) exp ::= SBL exp_list SBR *

                     {default} reduce 55

State 169:
     (54) exp ::= SBL SBR *

                     {default} reduce 54

State 170:
     (53) exp ::= REAL *

                     {default} reduce 53

State 171:
     (52) exp ::= INT *

                     {default} reduce 52

State 172:
     (51) exp ::= TRUE *

                     {default} reduce 51

State 173:
     (50) exp ::= FALSE *

                     {default} reduce 50

State 174:
     (49) exp ::= NIL *

                     {default} reduce 49

State 175:
     (48) exp ::= function *

                     {default} reduce 48

State 176:
     (46) prefixexp ::= PL exp PR *

                     {default} reduce 46

State 177:
     (45) prefixexp ::= functioncall *

                     {default} reduce 45

State 178:
     (44) prefixexp ::= STRING *

                     {default} reduce 44

State 179:
     (43) prefixexp ::= var *

                     {default} reduce 43

State 180:
     (42) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 42

State 181:
     (41) functioncall ::= prefixexp PL PR *

                     {default} reduce 41

State 182:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 183:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 184:
     (33) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 33

State 185:
     (32) ident_list ::= IDENT *

                     {default} reduce 32

State 186:
     (38) function ::= DEF func_body *

                     {default} reduce 38

State 187:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: ASSIG
   27: GLOBAL
   28: IDENT
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: CLASS
   43: PL
   44: PR
   45: DEF
   46: COMMA
   47: STRING
   48: NIL
   49: FALSE
   50: TRUE
   51: INT
   52: REAL
   53: SBL
   54: SBR
   55: CBL
   56: CBR
   57: COLON
   58: PIPE
   59: error:
   60: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   61: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   62: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   63: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK CLASS PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   64: exp: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   65: var: IDENT PL STRING
   66: else: <lambda> ELSE ELSEIF
   67: class_body: NL SCOLON
   68: func_body: PL
   69: ident_list: IDENT
   70: func_ident: IDENT
   71: function: DEF
   72: functioncall: IDENT PL STRING
   73: prefixexp: IDENT PL STRING
   74: exp_list: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   75: dict_list: MINUS NOT IDENT PL DEF STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
