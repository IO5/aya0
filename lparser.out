State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                   TERMINATION shift  107
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         chunk accept
                         block shift  103
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  81
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  43
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  117
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  45
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= FOR ident_list IN exp_list DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  85
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  86
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  87
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  100
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                         block shift  82
                     stat_list shift  80
                          stat shift  138
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                          stat shift  108
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR ident_list IN exp_list DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                            DO shift  8
                        GLOBAL shift  91
                         IDENT shift  123
                         LOCAL shift  76
                         WHILE shift  18
                        REPEAT shift  6
                           FOR shift  47
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  116
                         BREAK shift  115
                           DEF shift  42
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                          stat shift  142
                           exp shift  62
                           var shift  99
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                            PR shift  136
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  59
                           var shift  134
                      exp_list shift  77
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 13:
          stat ::= FOR ident_list IN * exp_list DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  59
                           var shift  134
                      exp_list shift  74
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 14:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  50
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 15:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  55
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 16:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  51
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 17:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  56
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 18:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  52
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 19:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  57
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 20:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  58
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 21:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  93
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 22:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  94
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 23:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  95
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 24:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  96
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  97
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  98
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  72
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  73
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  71
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  66
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  67
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  68
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  69
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  70
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  53
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  65
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  54
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  60
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  64
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 40:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  61
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT

                         MINUS shift  21
                           NOT shift  22
                         IDENT shift  123
                           DEF shift  49
                            PL shift  37
                        STRING shift  133
                           NIL shift  129
                         FALSE shift  128
                          TRUE shift  127
                           INT shift  126
                          REAL shift  125
                          PIPE shift  35
                           exp shift  63
                           var shift  134
                      function shift  130
                  functioncall shift  132
                     prefixexp shift  78

State 42:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  112
                            PL shift  46
                    func_ident shift  44
                     func_body shift  141

State 43:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  111
                     {default} reduce 18

State 44:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  83
                            PL shift  46
                     func_body shift  114

State 45:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  84
                     {default} reduce 18

State 46:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  140
                            PR shift  1
                    ident_list shift  79

State 47:
          stat ::= FOR * ident_list IN exp_list DO block END
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT

                         IDENT shift  140
                    ident_list shift  75

State 48:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  46
                     func_body shift  121

State 49:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  46
                     func_body shift  141

State 50:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                          THEN shift  2

State 51:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                          THEN shift  4

State 52:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                            DO shift  7

State 53:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                          PIPE shift  124

State 54:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                            PR shift  131

State 55:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 21

State 56:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 15

State 57:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 13

State 58:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 10

State 59:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (66) exp_list ::= exp *

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 66

State 60:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (67) exp_list ::= exp_list COMMA exp *

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 67

State 61:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 9

State 62:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  41
                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 7

State 63:
          exp ::= exp * OR exp
     (47) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  39
                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 47

State 64:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (48) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  30
                           NEQ shift  31
                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 48

State 65:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (49) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 49

State 66:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (54) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 54

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (53) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  36
                             G shift  34
                           LEQ shift  33
                           GEQ shift  32
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 53

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (52) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 52

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (51) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 51

State 70:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (50) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  29
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 50

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (55) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  28
                         MINUS shift  27
                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 55

State 72:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (57) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 57

State 73:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (56) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  26
                           DIV shift  25
                           MOD shift  24
                           EXP shift  23
                     {default} reduce 56

State 74:
          stat ::= FOR ident_list IN exp_list * DO block END
          exp_list ::= exp_list * COMMA exp

                            DO shift  5
                         COMMA shift  38

State 75:
          stat ::= FOR ident_list * IN exp_list DO block END
          ident_list ::= ident_list * COMMA IDENT

                            IN shift  13
                         COMMA shift  101

State 76:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  89
                           DEF shift  88

State 77:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  38
                            PR shift  135

State 78:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (39) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT

                           DOT shift  92
                            PL shift  12
                     {default} reduce 39

State 79:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                         COMMA shift  101
                            PR shift  9

State 80:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 81:
          func_body ::= PL PR block * END

                           END shift  109

State 82:
          func_body ::= PL ident_list PR block * END

                           END shift  110

State 83:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  113

State 84:
          stat ::= IF exp THEN block else * END

                           END shift  118

State 85:
          stat ::= FOR ident_list IN exp_list DO block * END

                           END shift  119

State 86:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  17

State 87:
          stat ::= WHILE exp DO block * END

                           END shift  120

State 88:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  48

State 89:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  19
                     {default} reduce 12

State 90:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  20
                     {default} reduce 11

State 91:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  90

State 92:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  122

State 93:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (63) exp ::= MINUS exp *

                           EXP shift  23
                     {default} reduce 63

State 94:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (62) exp ::= NOT exp *

                           EXP shift  23
                     {default} reduce 62

State 95:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (61) exp ::= exp EXP exp *

                           EXP shift  23
                     {default} reduce 61

State 96:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (60) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  23
                     {default} reduce 60

State 97:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (59) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  23
                     {default} reduce 59

State 98:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (58) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  23
                     {default} reduce 58

State 99:
          stat ::= var * ASSIG exp
     (35) prefixexp ::= var *

                         ASSIG shift  40
                     {default} reduce 35

State 100:
          stat ::= DO block * END

                           END shift  137

State 101:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  139

State 102:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 103:
          chunk ::= block * EOS

                           EOS shift  102

State 104:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 105:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  104

State 106:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  105

State 107:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  106

State 108:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 109:
     (31) func_body ::= PL PR block END *

                     {default} reduce 31

State 110:
     (32) func_body ::= PL ident_list PR block END *

                     {default} reduce 32

State 111:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 112:
     (28) func_ident ::= IDENT *

                     {default} reduce 28

State 113:
     (29) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 29

State 114:
     (26) stat ::= DEF func_ident func_body *

                     {default} reduce 26

State 115:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 116:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 117:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 118:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 119:
     (16) stat ::= FOR ident_list IN exp_list DO block END *

                     {default} reduce 16

State 120:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 121:
     (27) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 27

State 122:
     (65) var ::= prefixexp DOT IDENT *

                     {default} reduce 65

State 123:
     (64) var ::= IDENT *

                     {default} reduce 64

State 124:
     (46) exp ::= PIPE exp PIPE *

                     {default} reduce 46

State 125:
     (45) exp ::= REAL *

                     {default} reduce 45

State 126:
     (44) exp ::= INT *

                     {default} reduce 44

State 127:
     (43) exp ::= TRUE *

                     {default} reduce 43

State 128:
     (42) exp ::= FALSE *

                     {default} reduce 42

State 129:
     (41) exp ::= NIL *

                     {default} reduce 41

State 130:
     (40) exp ::= function *

                     {default} reduce 40

State 131:
     (38) prefixexp ::= PL exp PR *

                     {default} reduce 38

State 132:
     (37) prefixexp ::= functioncall *

                     {default} reduce 37

State 133:
     (36) prefixexp ::= STRING *

                     {default} reduce 36

State 134:
     (35) prefixexp ::= var *

                     {default} reduce 35

State 135:
     (34) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 34

State 136:
     (33) functioncall ::= prefixexp PL PR *

                     {default} reduce 33

State 137:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 138:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 139:
     (25) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 25

State 140:
     (24) ident_list ::= IDENT *

                     {default} reduce 24

State 141:
     (30) function ::= DEF func_body *

                     {default} reduce 30

State 142:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: ASSIG
   27: GLOBAL
   28: IDENT
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: COMMA
   43: DEF
   44: PL
   45: PR
   46: STRING
   47: NIL
   48: FALSE
   49: TRUE
   50: INT
   51: REAL
   52: PIPE
   53: error:
   54: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL PIPE
   55: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL PIPE
   56: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL PIPE
   57: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL PIPE
   58: exp: MINUS NOT IDENT DEF PL STRING NIL FALSE TRUE INT REAL PIPE
   59: var: IDENT PL STRING
   60: ident_list: IDENT
   61: exp_list: MINUS NOT IDENT DEF PL STRING NIL FALSE TRUE INT REAL PIPE
   62: else: <lambda> ELSE ELSEIF
   63: func_ident: IDENT
   64: func_body: PL
   65: function: DEF
   66: functioncall: IDENT PL STRING
   67: prefixexp: IDENT PL STRING
