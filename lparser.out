State 0:
          chunk ::= * TERMINATION UNINITIALIZED WARNING DOT
          chunk ::= * block EOS
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                   TERMINATION shift  112
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         chunk accept
                         block shift  108
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 1:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  83
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 2:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSEIF exp THEN * block else
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  45
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 3:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          else ::= ELSE * block
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  122
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 4:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= IF exp THEN * block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  47
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 5:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= FOR IDENT IN exp DO * block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  87
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 6:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= REPEAT * block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  90
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 7:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= WHILE exp DO * block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  91
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 8:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= DO * block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  105
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 9:
          block ::= * stat_list
          stat_list ::= * stat
          stat_list ::= * stat_list NL stat
          stat_list ::= * stat_list SCOLON stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          func_body ::= PL ident_list PR * block END
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                         block shift  84
                     stat_list shift  82
                          stat shift  147
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 10:
          stat_list ::= stat_list SCOLON * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                          stat shift  113
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 11:
          stat_list ::= stat_list NL * stat
      (6) stat ::= *
          stat ::= * exp
          stat ::= * DO block END
          stat ::= * var ASSIG exp
          stat ::= * GLOBAL IDENT ASSIG exp
          stat ::= * GLOBAL IDENT
          stat ::= * LOCAL IDENT
          stat ::= * LOCAL IDENT ASSIG exp
          stat ::= * WHILE exp DO block END
          stat ::= * REPEAT block UNTIL exp
          stat ::= * FOR IDENT IN exp DO block END
          stat ::= * IF exp THEN block else END
          stat ::= * RETURN exp
          stat ::= * NEXT
          stat ::= * BREAK
          stat ::= * DEF func_ident func_body
          stat ::= * LOCAL DEF IDENT func_body
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                            DO shift  8
                        GLOBAL shift  95
                         IDENT shift  129
                         LOCAL shift  78
                         WHILE shift  19
                        REPEAT shift  6
                           FOR shift  89
                            IF shift  16
                        RETURN shift  15
                          NEXT shift  121
                         BREAK shift  120
                           DEF shift  44
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                          stat shift  151
                           exp shift  65
                           var shift  104
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                     {default} reduce 6

State 12:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= SBL * SBR
          exp ::= * SBL exp_list SBR
          exp ::= SBL * exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           SBR shift  133
                           CBL shift  103
                          PIPE shift  37
                           exp shift  63
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                      exp_list shift  79

State 13:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= prefixexp PL * PR
          functioncall ::= * prefixexp PL exp_list PR
          functioncall ::= prefixexp PL * exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= * exp
          exp_list ::= * exp_list COMMA exp

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                            PR shift  145
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  63
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77
                      exp_list shift  80

State 14:
          else ::= ELSEIF * exp THEN block else
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  51
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 15:
          stat ::= RETURN * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  58
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 16:
          stat ::= IF * exp THEN block else END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  52
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 17:
          stat ::= FOR IDENT IN * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  53
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 18:
          stat ::= REPEAT block UNTIL * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  59
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 19:
          stat ::= WHILE * exp DO block END
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  54
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 20:
          stat ::= LOCAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  60
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 21:
          stat ::= GLOBAL IDENT ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  61
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 22:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          var ::= prefixexp SBL * exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  55
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 23:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          exp ::= MINUS * exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  97
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 24:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= NOT * exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  98
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 25:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= exp EXP * exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  99
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 26:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= exp MOD * exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  100
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 27:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= exp DIV * exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  101
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 28:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= exp MUL * exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  102
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 29:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= exp MINUS * exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  75
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 30:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= exp PLUS * exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  76
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 31:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= exp RANGEOP * exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  74
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 32:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= exp EQ * exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  69
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 33:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= exp NEQ * exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  70
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 34:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= exp GEQ * exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  71
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 35:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= exp LEQ * exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  72
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 36:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= exp G * exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  73
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 37:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= PIPE * exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  56
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 38:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= exp L * exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  68
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 39:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          prefixexp ::= PL * exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  57
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 40:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR
          exp_list ::= exp_list COMMA * exp

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  62
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 41:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= exp AND * exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  67
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 42:
          stat ::= var ASSIG * exp
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  64
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 43:
          function ::= * DEF func_body
          functioncall ::= * prefixexp PL PR
          functioncall ::= * prefixexp PL exp_list PR
          prefixexp ::= * var
          prefixexp ::= * STRING
          prefixexp ::= * functioncall
          prefixexp ::= * PL exp PR
          exp ::= * prefixexp
          exp ::= * function
          exp ::= * NIL
          exp ::= * FALSE
          exp ::= * TRUE
          exp ::= * INT
          exp ::= * REAL
          exp ::= * SBL SBR
          exp ::= * SBL exp_list SBR
          exp ::= * CBL CBR
          exp ::= * PIPE exp PIPE
          exp ::= * exp OR exp
          exp ::= exp OR * exp
          exp ::= * exp AND exp
          exp ::= * exp L exp
          exp ::= * exp G exp
          exp ::= * exp LEQ exp
          exp ::= * exp GEQ exp
          exp ::= * exp NEQ exp
          exp ::= * exp EQ exp
          exp ::= * exp RANGEOP exp
          exp ::= * exp PLUS exp
          exp ::= * exp MINUS exp
          exp ::= * exp MUL exp
          exp ::= * exp DIV exp
          exp ::= * exp MOD exp
          exp ::= * exp EXP exp
          exp ::= * NOT exp
          exp ::= * MINUS exp
          var ::= * IDENT
          var ::= * prefixexp DOT IDENT
          var ::= * prefixexp SBL exp SBR

                         MINUS shift  23
                           NOT shift  24
                         IDENT shift  129
                           DEF shift  50
                            PL shift  39
                        STRING shift  142
                           NIL shift  138
                         FALSE shift  137
                          TRUE shift  136
                           INT shift  135
                          REAL shift  134
                           SBL shift  12
                           CBL shift  103
                          PIPE shift  37
                           exp shift  66
                           var shift  143
                      function shift  139
                  functioncall shift  141
                     prefixexp shift  77

State 44:
          stat ::= DEF * func_ident func_body
          func_ident ::= * IDENT
          func_ident ::= * func_ident DOT IDENT
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                         IDENT shift  117
                            PL shift  48
                    func_ident shift  46
                     func_body shift  150

State 45:
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else
          else ::= ELSEIF exp THEN block * else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  116
                     {default} reduce 18

State 46:
          stat ::= DEF func_ident * func_body
          func_ident ::= func_ident * DOT IDENT
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                           DOT shift  85
                            PL shift  48
                     func_body shift  119

State 47:
          stat ::= IF exp THEN block * else END
     (18) else ::= *
          else ::= * ELSE block
          else ::= * ELSEIF exp THEN block else

                          ELSE shift  3
                        ELSEIF shift  14
                          else shift  86
                     {default} reduce 18

State 48:
          ident_list ::= * IDENT
          ident_list ::= * ident_list COMMA IDENT
          func_body ::= PL * PR block END
          func_body ::= PL * ident_list PR block END

                         IDENT shift  149
                            PR shift  1
                    ident_list shift  81

State 49:
          stat ::= LOCAL DEF IDENT * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  48
                     func_body shift  126

State 50:
          function ::= DEF * func_body
          func_body ::= * PL PR block END
          func_body ::= * PL ident_list PR block END

                            PL shift  48
                     func_body shift  150

State 51:
          else ::= ELSEIF exp * THEN block else
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                          THEN shift  2

State 52:
          stat ::= IF exp * THEN block else END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                          THEN shift  4

State 53:
          stat ::= FOR IDENT IN exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                            DO shift  5

State 54:
          stat ::= WHILE exp * DO block END
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                            DO shift  7

State 55:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
          var ::= prefixexp SBL exp * SBR

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                           SBR shift  127

State 56:
          exp ::= PIPE exp * PIPE
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                          PIPE shift  130

State 57:
          prefixexp ::= PL exp * PR
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                            PR shift  140

State 58:
     (21) stat ::= RETURN exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 21

State 59:
     (15) stat ::= REPEAT block UNTIL exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 15

State 60:
     (13) stat ::= LOCAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 13

State 61:
     (10) stat ::= GLOBAL IDENT ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 10

State 62:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (71) exp_list ::= exp_list COMMA exp *

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 71

State 63:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (70) exp_list ::= exp *

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 70

State 64:
      (9) stat ::= var ASSIG exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 9

State 65:
      (7) stat ::= exp *
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            OR shift  43
                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 7

State 66:
          exp ::= exp * OR exp
     (50) exp ::= exp OR exp *
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           AND shift  41
                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 50

State 67:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
     (51) exp ::= exp AND exp *
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                            EQ shift  32
                           NEQ shift  33
                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 51

State 68:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
     (52) exp ::= exp L exp *
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 52

State 69:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
     (57) exp ::= exp EQ exp *
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 57

State 70:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
     (56) exp ::= exp NEQ exp *
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L shift  38
                             G shift  36
                           LEQ shift  35
                           GEQ shift  34
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 56

State 71:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
     (55) exp ::= exp GEQ exp *
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 55

State 72:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
     (54) exp ::= exp LEQ exp *
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 54

State 73:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
     (53) exp ::= exp G exp *
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                             L error
                             G error
                           LEQ error
                           GEQ error
                       RANGEOP shift  31
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 53

State 74:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
     (58) exp ::= exp RANGEOP exp *
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                       RANGEOP error
                          PLUS shift  30
                         MINUS shift  29
                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 58

State 75:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
     (60) exp ::= exp MINUS exp *
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 60

State 76:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
     (59) exp ::= exp PLUS exp *
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           MUL shift  28
                           DIV shift  27
                           MOD shift  26
                           EXP shift  25
                     {default} reduce 59

State 77:
          functioncall ::= prefixexp * PL PR
          functioncall ::= prefixexp * PL exp_list PR
     (39) exp ::= prefixexp *
          var ::= prefixexp * DOT IDENT
          var ::= prefixexp * SBL exp SBR

                           DOT shift  96
                            PL shift  13
                           SBL shift  22
                     {default} reduce 39

State 78:
          stat ::= LOCAL * IDENT
          stat ::= LOCAL * IDENT ASSIG exp
          stat ::= LOCAL * DEF IDENT func_body

                         IDENT shift  93
                           DEF shift  92

State 79:
          exp ::= SBL exp_list * SBR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  40
                           SBR shift  132

State 80:
          functioncall ::= prefixexp PL exp_list * PR
          exp_list ::= exp_list * COMMA exp

                         COMMA shift  40
                            PR shift  144

State 81:
          ident_list ::= ident_list * COMMA IDENT
          func_body ::= PL ident_list * PR block END

                         COMMA shift  106
                            PR shift  9

State 82:
      (2) block ::= stat_list *
          stat_list ::= stat_list * NL stat
          stat_list ::= stat_list * SCOLON stat

                            NL shift  11
                        SCOLON shift  10
                     {default} reduce 2

State 83:
          func_body ::= PL PR block * END

                           END shift  114

State 84:
          func_body ::= PL ident_list PR block * END

                           END shift  115

State 85:
          func_ident ::= func_ident DOT * IDENT

                         IDENT shift  118

State 86:
          stat ::= IF exp THEN block else * END

                           END shift  123

State 87:
          stat ::= FOR IDENT IN exp DO block * END

                           END shift  124

State 88:
          stat ::= FOR IDENT * IN exp DO block END

                            IN shift  17

State 89:
          stat ::= FOR * IDENT IN exp DO block END

                         IDENT shift  88

State 90:
          stat ::= REPEAT block * UNTIL exp

                         UNTIL shift  18

State 91:
          stat ::= WHILE exp DO block * END

                           END shift  125

State 92:
          stat ::= LOCAL DEF * IDENT func_body

                         IDENT shift  49

State 93:
     (12) stat ::= LOCAL IDENT *
          stat ::= LOCAL IDENT * ASSIG exp

                         ASSIG shift  20
                     {default} reduce 12

State 94:
          stat ::= GLOBAL IDENT * ASSIG exp
     (11) stat ::= GLOBAL IDENT *

                         ASSIG shift  21
                     {default} reduce 11

State 95:
          stat ::= GLOBAL * IDENT ASSIG exp
          stat ::= GLOBAL * IDENT

                         IDENT shift  94

State 96:
          var ::= prefixexp DOT * IDENT

                         IDENT shift  128

State 97:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (66) exp ::= MINUS exp *

                           EXP shift  25
                     {default} reduce 66

State 98:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (65) exp ::= NOT exp *

                           EXP shift  25
                     {default} reduce 65

State 99:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp
     (64) exp ::= exp EXP exp *

                           EXP shift  25
                     {default} reduce 64

State 100:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
     (63) exp ::= exp MOD exp *
          exp ::= exp * EXP exp

                           EXP shift  25
                     {default} reduce 63

State 101:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
          exp ::= exp * DIV exp
     (62) exp ::= exp DIV exp *
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  25
                     {default} reduce 62

State 102:
          exp ::= exp * OR exp
          exp ::= exp * AND exp
          exp ::= exp * L exp
          exp ::= exp * G exp
          exp ::= exp * LEQ exp
          exp ::= exp * GEQ exp
          exp ::= exp * NEQ exp
          exp ::= exp * EQ exp
          exp ::= exp * RANGEOP exp
          exp ::= exp * PLUS exp
          exp ::= exp * MINUS exp
          exp ::= exp * MUL exp
     (61) exp ::= exp MUL exp *
          exp ::= exp * DIV exp
          exp ::= exp * MOD exp
          exp ::= exp * EXP exp

                           EXP shift  25
                     {default} reduce 61

State 103:
          exp ::= CBL * CBR

                           CBR shift  131

State 104:
          stat ::= var * ASSIG exp
     (35) prefixexp ::= var *

                         ASSIG shift  42
                     {default} reduce 35

State 105:
          stat ::= DO block * END

                           END shift  146

State 106:
          ident_list ::= ident_list COMMA * IDENT

                         IDENT shift  148

State 107:
      (1) chunk ::= block EOS *

                             $ reduce 1

State 108:
          chunk ::= block * EOS

                           EOS shift  107

State 109:
      (0) chunk ::= TERMINATION UNINITIALIZED WARNING DOT *

                             $ reduce 0

State 110:
          chunk ::= TERMINATION UNINITIALIZED WARNING * DOT

                           DOT shift  109

State 111:
          chunk ::= TERMINATION UNINITIALIZED * WARNING DOT

                       WARNING shift  110

State 112:
          chunk ::= TERMINATION * UNINITIALIZED WARNING DOT

                 UNINITIALIZED shift  111

State 113:
      (5) stat_list ::= stat_list SCOLON stat *

                     {default} reduce 5

State 114:
     (31) func_body ::= PL PR block END *

                     {default} reduce 31

State 115:
     (32) func_body ::= PL ident_list PR block END *

                     {default} reduce 32

State 116:
     (20) else ::= ELSEIF exp THEN block else *

                     {default} reduce 20

State 117:
     (28) func_ident ::= IDENT *

                     {default} reduce 28

State 118:
     (29) func_ident ::= func_ident DOT IDENT *

                     {default} reduce 29

State 119:
     (26) stat ::= DEF func_ident func_body *

                     {default} reduce 26

State 120:
     (23) stat ::= BREAK *

                     {default} reduce 23

State 121:
     (22) stat ::= NEXT *

                     {default} reduce 22

State 122:
     (19) else ::= ELSE block *

                     {default} reduce 19

State 123:
     (17) stat ::= IF exp THEN block else END *

                     {default} reduce 17

State 124:
     (16) stat ::= FOR IDENT IN exp DO block END *

                     {default} reduce 16

State 125:
     (14) stat ::= WHILE exp DO block END *

                     {default} reduce 14

State 126:
     (27) stat ::= LOCAL DEF IDENT func_body *

                     {default} reduce 27

State 127:
     (69) var ::= prefixexp SBL exp SBR *

                     {default} reduce 69

State 128:
     (68) var ::= prefixexp DOT IDENT *

                     {default} reduce 68

State 129:
     (67) var ::= IDENT *

                     {default} reduce 67

State 130:
     (49) exp ::= PIPE exp PIPE *

                     {default} reduce 49

State 131:
     (48) exp ::= CBL CBR *

                     {default} reduce 48

State 132:
     (47) exp ::= SBL exp_list SBR *

                     {default} reduce 47

State 133:
     (46) exp ::= SBL SBR *

                     {default} reduce 46

State 134:
     (45) exp ::= REAL *

                     {default} reduce 45

State 135:
     (44) exp ::= INT *

                     {default} reduce 44

State 136:
     (43) exp ::= TRUE *

                     {default} reduce 43

State 137:
     (42) exp ::= FALSE *

                     {default} reduce 42

State 138:
     (41) exp ::= NIL *

                     {default} reduce 41

State 139:
     (40) exp ::= function *

                     {default} reduce 40

State 140:
     (38) prefixexp ::= PL exp PR *

                     {default} reduce 38

State 141:
     (37) prefixexp ::= functioncall *

                     {default} reduce 37

State 142:
     (36) prefixexp ::= STRING *

                     {default} reduce 36

State 143:
     (35) prefixexp ::= var *

                     {default} reduce 35

State 144:
     (34) functioncall ::= prefixexp PL exp_list PR *

                     {default} reduce 34

State 145:
     (33) functioncall ::= prefixexp PL PR *

                     {default} reduce 33

State 146:
      (8) stat ::= DO block END *

                     {default} reduce 8

State 147:
      (3) stat_list ::= stat *

                     {default} reduce 3

State 148:
     (25) ident_list ::= ident_list COMMA IDENT *

                     {default} reduce 25

State 149:
     (24) ident_list ::= IDENT *

                     {default} reduce 24

State 150:
     (30) function ::= DEF func_body *

                     {default} reduce 30

State 151:
      (4) stat_list ::= stat_list NL stat *

                     {default} reduce 4

----------------------------------------------------
Symbols:
    0: $:
    1: OR
    2: AND
    3: EQ
    4: NEQ
    5: L
    6: G
    7: LEQ
    8: GEQ
    9: RANGEOP
   10: PLUS
   11: MINUS
   12: MUL
   13: DIV
   14: MOD
   15: NOT
   16: EXP
   17: TERMINATION
   18: UNINITIALIZED
   19: WARNING
   20: DOT
   21: EOS
   22: NL
   23: SCOLON
   24: DO
   25: END
   26: ASSIG
   27: GLOBAL
   28: IDENT
   29: LOCAL
   30: WHILE
   31: REPEAT
   32: UNTIL
   33: FOR
   34: IN
   35: IF
   36: THEN
   37: ELSE
   38: ELSEIF
   39: RETURN
   40: NEXT
   41: BREAK
   42: COMMA
   43: DEF
   44: PL
   45: PR
   46: STRING
   47: NIL
   48: FALSE
   49: TRUE
   50: INT
   51: REAL
   52: SBL
   53: SBR
   54: CBL
   55: CBR
   56: PIPE
   57: error:
   58: chunk: MINUS NOT TERMINATION EOS NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   59: block: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   60: stat_list: <lambda> MINUS NOT NL SCOLON DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   61: stat: <lambda> MINUS NOT DO GLOBAL IDENT LOCAL WHILE REPEAT FOR IF RETURN NEXT BREAK DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   62: exp: MINUS NOT IDENT DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
   63: var: IDENT PL STRING
   64: else: <lambda> ELSE ELSEIF
   65: ident_list: IDENT
   66: func_ident: IDENT
   67: func_body: PL
   68: function: DEF
   69: functioncall: IDENT PL STRING
   70: prefixexp: IDENT PL STRING
   71: exp_list: MINUS NOT IDENT DEF PL STRING NIL FALSE TRUE INT REAL SBL CBL PIPE
